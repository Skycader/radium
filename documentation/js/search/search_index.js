var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.627,1,1.138]],["body/components/AppComponent.html",[0,0.913,1,1.801,2,1.928,3,0.205,4,0.181,5,1.453,6,1.453,7,1.453,8,0.181,9,2.666,10,3.341,11,5.142,12,1.453,13,3.115,14,2.568,15,3.017,16,2.056,17,4.43,18,2.056,19,4.43,20,0.455,21,0.947,22,2.844,23,5.142,24,1.928,25,3.808,26,1.069,27,2.132,28,3.519,29,1.563,30,4.43,31,1.008,32,0.022,33,1.168,34,0.689,35,1.008,36,3.13,37,1.362,38,2.36,39,1.453,40,1.362,41,1.204,42,3.341,43,0.702,44,0.455,45,1.279,46,1.362,47,1.798,48,2.132,49,3.13,50,0.205,51,0.487,52,1.668,53,3.13,54,0.799,55,2.056,56,2.056,57,1.453,58,2.595,59,1.453,60,1.453,61,1.134,62,2.844,63,1.453,64,1.204,65,1.453,66,1.134,67,1.453,68,1.134,69,1.453,70,1.069,71,1.453,72,1.453,73,1.134,74,1.453,75,1.134,76,1.928,77,1.453,78,1.134,79,1.453,80,1.134,81,1.453,82,1.453,83,1.453,84,0.014,85,0.014]],["title/modules/AppModule.html",[86,0.851,87,2.201]],["body/modules/AppModule.html",[1,2.155,3,0.192,4,0.169,8,0.169,14,1.273,32,0.022,43,0.865,44,0.425,45,1.726,50,0.192,51,0.455,54,0.747,84,0.013,85,0.013,86,0.705,87,4.415,88,1.06,89,1.125,90,2.155,91,2.155,92,2.155,93,1.196,94,2.493,95,2.493,96,2.493,97,2.493,98,2.493,99,3.731,100,3.731,101,3.731,102,3.731,103,3.731,104,3.731,105,3.731,106,3.731,107,1.837,108,1.273,109,1.196,110,2.927,111,1.837,112,1.837,113,4.222,114,2.927,115,2.207,116,2.207,117,2.927,118,2.207,119,2.927,120,1.993,121,2.927,122,1.993,123,2.927,124,2.493,125,1.823,126,2.207,127,2.927,128,2.207,129,1.453,130,2.927,131,2.927,132,2.927,133,3.596,134,1.358,135,2.927,136,2.927,137,2.927,138,2.927,139,2.927,140,2.927,141,2.927,142,4.222,143,2.927,144,2.927,145,2.927,146,2.927,147,2.493]],["title/modules/AppRoutingModule.html",[86,0.851,99,2.201]],["body/modules/AppRoutingModule.html",[0,0.8,1,1.451,3,0.295,4,0.261,8,0.261,32,0.023,43,0.813,44,0.654,50,0.295,51,0.701,70,1.929,84,0.018,85,0.018,88,1.631,93,1.841,99,3.519,111,1.96,112,2.459,118,3.397,148,4.505,149,4.505,150,3.245,151,4.205,152,2.091,153,4.505,154,3.068,155,3.837,156,2.236,157,2.806,158,4.505]],["title/modules/AppServerModule.html",[86,0.851,159,2.406]],["body/modules/AppServerModule.html",[1,2.189,3,0.275,4,0.243,8,0.243,32,0.022,43,0.792,44,0.61,50,0.275,51,0.653,54,1.072,84,0.017,85,0.017,86,1.011,87,4.161,88,1.52,89,1.614,90,1.826,91,2.599,92,1.826,93,1.715,107,2.351,108,1.826,109,1.715,111,2.351,112,2.351,115,3.165,118,3.165,159,4.629,160,3.575,161,4.198,162,4.198,163,4.198,164,5.403,165,3.165,166,4.198]],["title/interfaces/AppStateInterface.html",[46,1.537,167,0.802]],["body/interfaces/AppStateInterface.html",[3,0.299,4,0.264,8,0.264,20,0.662,21,1.217,32,0.021,34,0.966,43,0.779,46,2.476,50,0.299,84,0.018,85,0.018,167,1.035,168,1.863,169,3.882,170,5.537,171,4.428,172,3.734,173,3.464,174,3.734,175,3.464,176,4.557,177,4.557,178,4.557]],["title/interceptors/AuthInterceptor.html",[106,2.201,179,3.009]],["body/interceptors/AuthInterceptor.html",[3,0.243,4,0.215,8,0.215,10,2.794,20,0.538,24,2.166,26,1.265,29,1.513,31,1.603,32,0.023,33,1.13,34,0.774,35,1.603,37,1.612,43,0.787,44,0.538,50,0.243,51,0.577,52,1.974,84,0.015,85,0.015,106,3.1,125,2.308,126,2.794,134,1.72,156,1.84,180,3.705,181,3.156,182,5.62,183,3.705,184,3.201,185,3.705,186,3.39,187,3.705,188,6.008,189,5.62,190,6.008,191,3.705,192,5.62,193,2.994,194,3.705,195,4.977,196,1.513,197,1.425,198,2.524,199,4.972,200,3.156,201,3.705,202,3.705,203,3.705,204,3.705,205,1.72,206,3.705]],["title/modules/AuthModule.html",[86,0.851,100,2.201]],["body/modules/AuthModule.html",[0,0.829,3,0.221,4,0.195,8,0.195,32,0.022,43,0.874,44,0.49,45,1.379,50,0.221,51,0.525,54,0.862,64,1.795,75,2.33,76,2.032,78,2.33,84,0.014,85,0.014,86,0.813,88,1.222,89,1.297,90,2.33,91,1.468,92,2.032,93,1.379,100,4.197,107,2.032,108,1.468,109,1.379,111,2.032,112,2.032,122,2.298,128,2.544,129,1.675,133,2.874,134,1.566,150,1.938,151,3.647,152,1.566,156,1.675,157,2.908,207,2.874,208,2.874,209,2.874,210,3.908,211,3.374,212,2.488,213,1.675,214,4.669,215,2.101,216,3.521,217,3.374,218,2.298,219,3.374,220,3.977,221,3.374,222,2.298,223,3.374,224,4.669,225,2.544,226,3.374,227,2.544,228,3.374,229,3.18,230,3.374,231,3.18,232,3.374,233,2.298,234,2.544,235,3.374,236,3.374]],["title/interfaces/AuthResponseInterface.html",[167,0.802,237,2.406]],["body/interfaces/AuthResponseInterface.html",[3,0.327,4,0.289,8,0.289,20,0.724,21,1.286,32,0.022,34,0.776,43,0.626,50,0.327,84,0.019,85,0.019,167,1.132,168,2.037,237,4.096,238,4.245,239,3.573,240,2.918,241,4.985]],["title/injectables/AuthService.html",[196,1.074,242,1.754]],["body/injectables/AuthService.html",[3,0.201,4,0.177,8,0.177,15,2.087,20,0.445,22,3.133,24,1.899,26,1.046,29,1.779,31,1.784,32,0.022,33,1.258,34,0.862,35,1.784,37,2.41,43,0.818,44,0.445,50,0.201,51,0.477,52,1.633,84,0.014,85,0.014,125,1.909,126,2.311,134,1.422,173,1.633,193,3.336,196,1.326,197,1.178,205,2.571,237,3.772,239,1.633,240,2.212,242,2.167,243,1.521,244,2.61,245,5.539,246,3.717,247,3.291,248,3.833,249,2.61,250,4.717,251,3.065,252,3.717,253,3.065,254,4.364,255,3.065,256,3.065,257,4.364,258,3.772,259,3.065,260,5.182,261,3.065,262,3.181,263,3.065,264,2.311,265,1.909,266,1.76,267,3.065,268,3.065,269,3.065,270,2.311,271,3.065,272,3.065,273,5.083,274,4.364,275,3.065,276,5.083,277,3.065,278,3.065]],["title/interfaces/AuthStateInterface.html",[167,0.802,173,1.882]],["body/interfaces/AuthStateInterface.html",[3,0.265,4,0.234,8,0.234,20,0.586,21,1.127,32,0.022,34,1.003,43,0.661,50,0.265,84,0.016,85,0.016,167,0.917,168,1.65,173,2.807,240,2.705,266,2.319,279,3.439,280,4.233,281,5.294,282,4.687,283,4.233,284,5.294,285,3.679,286,6.906,287,3.312,288,2.75]],["title/components/BackendErrorMessagesComponent.html",[0,0.627,61,1.28]],["body/components/BackendErrorMessagesComponent.html",[0,0.84,1,0.871,2,1.734,3,0.177,4,0.157,5,1.255,6,1.255,7,1.255,8,0.157,12,1.255,13,3.022,14,2.059,16,1.85,18,1.85,20,0.393,21,0.852,22,2.705,24,1.734,25,3.558,29,1.438,32,0.023,33,0.905,34,0.62,37,1.176,38,2.123,39,2.197,40,1.176,41,1.039,43,0.5,44,0.393,50,0.177,51,0.421,54,0.69,55,1.85,56,1.85,57,1.255,58,2.424,59,1.255,60,1.255,61,1.892,62,2.87,63,2.797,64,2.661,65,1.255,66,0.979,67,1.255,68,0.979,69,1.255,70,0.923,71,1.255,72,1.255,73,0.979,74,1.255,75,0.979,76,1.734,77,1.255,78,0.979,79,1.255,80,0.979,81,1.255,82,1.255,83,1.255,84,0.012,85,0.012,205,1.255,222,3.558,285,2.123,287,2.522,288,1.841,289,3.939,290,4.449,291,2.302,292,5.57,293,3.985,294,3.985,295,4.733,296,3.985,297,3.005,298,2.703,299,2.703,300,2.703,301,2.703,302,2.703,303,2.703,304,3.985,305,2.703,306,2.703,307,3.985,308,2.703,309,2.703,310,3.985]],["title/modules/BackendErrorMessagesModule.html",[86,0.851,210,2.201]],["body/modules/BackendErrorMessagesModule.html",[3,0.273,4,0.241,8,0.241,32,0.022,43,0.747,44,0.605,50,0.273,51,0.648,54,1.064,61,2.569,64,2.419,84,0.017,85,0.017,86,1.004,88,1.509,89,1.602,90,2.591,91,1.813,92,1.813,93,2.433,107,2.34,108,1.813,109,1.703,111,1.813,112,2.34,210,4.226,212,2.865,213,2.069,222,3.663,289,3.142,311,3.55,312,3.55,313,3.55,314,4.168,315,4.168,316,4.168]],["title/interfaces/BackendErrorsInterface.html",[167,0.802,287,1.882]],["body/interfaces/BackendErrorsInterface.html",[3,0.338,4,0.299,8,0.299,29,1.568,32,0.021,39,3.149,50,0.338,84,0.019,85,0.019,167,1.172,168,2.109,287,3.271,317,4.395,318,5.161,319,5.23,320,5.161]],["title/interfaces/CommentInterface.html",[167,0.802,321,2.029]],["body/interfaces/CommentInterface.html",[3,0.305,4,0.269,8,0.269,20,0.675,21,1.232,32,0.022,33,1.486,34,0.897,39,3.183,50,0.378,84,0.018,85,0.018,167,1.308,168,1.9,175,2.476,285,3.07,321,3.597,322,3.505,323,5.576,324,3.166,325,2.476,326,3.166]],["title/components/CounterComponent.html",[0,0.627,66,1.28]],["body/components/CounterComponent.html",[0,0.784,1,0.776,2,1.59,3,0.158,4,0.139,5,1.118,6,1.118,7,1.118,8,0.139,12,1.118,13,2.943,14,2.307,16,1.696,18,1.696,20,0.35,21,0.782,22,3.143,24,1.59,26,0.822,27,1.64,28,3.205,29,1.762,31,0.776,32,0.023,33,1.003,34,0.687,35,0.776,37,2.146,38,2.627,40,1.59,41,2.472,43,0.728,44,0.35,45,0.984,46,1.048,47,1.383,50,0.158,51,0.375,52,1.283,54,0.615,55,1.696,56,1.696,57,1.118,58,2.289,59,1.118,60,1.118,61,0.872,62,2.591,63,1.118,64,0.926,65,1.118,66,1.786,67,1.118,68,0.872,69,1.118,70,0.822,71,1.118,72,1.118,73,0.872,74,1.118,75,0.872,76,1.59,77,1.118,78,0.872,79,1.118,80,0.872,81,1.118,82,1.118,83,1.118,84,0.011,85,0.011,171,3.801,193,2.353,197,0.926,325,1.283,327,2.051,328,3.655,329,3.655,330,4.2,331,4.932,332,4.932,333,4.2,334,2.408,335,2.408,336,2.408,337,2.408,338,2.408,339,2.756,340,2.408,341,3.113,342,3.655,343,2.408,344,1.5,345,1.816,346,2.408,347,1.816,348,2.408,349,1.816,350,2.408,351,2.408,352,2.408,353,3.655,354,3.655,355,3.113,356,3.655]],["title/modules/CounterModule.html",[86,0.851,101,2.201]],["body/modules/CounterModule.html",[0,0.709,3,0.262,4,0.231,8,0.231,32,0.023,43,0.828,44,0.58,45,1.633,50,0.262,51,0.622,54,1.021,66,2.433,84,0.016,85,0.016,86,0.963,88,1.447,89,1.537,90,2.539,91,1.739,92,1.739,93,1.633,101,4.107,107,2.277,108,1.739,109,1.633,111,1.739,112,2.277,122,2.722,150,2.295,151,3.974,152,1.855,156,1.984,157,2.489,171,2.722,212,2.788,213,1.984,234,3.014,357,3.404,358,3.404,359,3.997,360,3.997,361,3.946,362,3.997,363,3.997]],["title/interfaces/CounterStateInterface.html",[167,0.802,174,2.029]],["body/interfaces/CounterStateInterface.html",[3,0.334,4,0.295,8,0.295,20,0.74,21,1.303,32,0.021,34,0.792,41,2.597,50,0.334,84,0.019,85,0.019,167,1.156,168,2.082,174,3.499,325,3.473,364,4.338]],["title/interfaces/CurrentUserInterface.html",[167,0.802,240,1.537]],["body/interfaces/CurrentUserInterface.html",[3,0.252,4,0.222,8,0.222,20,0.558,21,1.09,32,0.022,34,1.051,39,3.362,50,0.252,84,0.016,85,0.016,167,0.872,168,1.569,199,4.595,240,2.217,285,3.474,325,3.048,365,3.27,366,6.094,367,6.094,368,3.796,369,5.191,370,6.094,371,6.094,372,4.151]],["title/injectables/FakeApiEffect.html",[196,1.074,373,2.406]],["body/injectables/FakeApiEffect.html",[3,0.226,4,0.199,8,0.199,20,0.5,21,1.013,26,1.617,29,1.439,31,1.109,32,0.023,33,0.782,34,0.536,35,1.109,40,1.498,41,1.324,43,0.812,44,0.5,50,0.226,51,0.536,84,0.015,85,0.015,129,1.71,134,1.598,196,1.439,197,1.324,205,2.931,243,1.71,265,2.145,321,3.108,373,3.225,374,2.933,375,5.412,376,2.345,377,4.301,378,4.406,379,3.444,380,3.686,381,3.225,382,4.735,383,4.735,384,4.735,385,4.735,386,4.735,387,3.571,388,4.081,389,4.735,390,3.444,391,2.345,392,3.444,393,2.345,394,2.345,395,2.345,396,2.345,397,2.597,398,2.597,399,3.444,400,2.933,401,2.72]],["title/interfaces/FakeApiStateInterface.html",[167,0.802,175,1.882]],["body/interfaces/FakeApiStateInterface.html",[3,0.295,4,0.261,8,0.261,20,0.654,21,1.208,32,0.022,33,1.023,34,0.879,39,2.623,50,0.37,84,0.018,85,0.018,167,1.283,168,1.841,175,3.01,285,3.625,321,3.718,322,3.397,323,3.837,324,4.409,325,3.289,326,4.409]],["title/components/FakeapiComponent.html",[0,0.627,68,1.28]],["body/components/FakeapiComponent.html",[0,0.856,1,0.9,2,1.776,3,0.183,4,0.162,5,1.297,6,1.297,7,1.297,8,0.162,12,1.297,13,3.044,14,2.099,16,1.895,18,1.895,20,0.406,21,0.873,22,2.955,24,1.776,26,0.954,27,1.903,28,3.386,29,1.613,31,0.9,32,0.023,33,1.095,34,0.635,35,0.9,37,1.216,38,2.175,40,1.776,41,1.57,43,0.709,44,0.406,45,1.142,46,1.216,47,1.604,50,0.183,51,0.435,52,1.488,54,0.713,55,1.895,56,1.895,57,1.297,58,2.463,59,1.297,60,1.297,61,1.012,62,2.897,63,1.297,64,1.074,65,1.297,66,1.012,67,1.297,68,1.922,69,1.297,70,0.954,71,1.297,72,1.297,73,1.012,74,1.297,75,1.012,76,1.776,77,1.297,78,1.012,79,1.297,80,1.012,81,1.297,82,1.297,83,1.297,84,0.013,85,0.013,172,2.345,324,3.286,325,2.175,326,3.845,344,1.74,355,3.477,396,1.903,402,2.379,403,4.082,404,4.082,405,5.306,406,4.082,407,2.794,408,4.082,409,2.794,410,3.477,411,2.794,412,2.107,413,2.794,414,2.794,415,2.794,416,2.794,417,3.477,418,4.082]],["title/modules/FakeapiModule.html",[86,0.851,102,2.201]],["body/modules/FakeapiModule.html",[0,0.666,3,0.246,4,0.217,8,0.217,32,0.023,43,0.863,44,0.545,45,1.534,50,0.246,51,0.584,54,0.958,68,2.396,84,0.016,85,0.016,86,0.904,88,1.359,89,1.443,90,2.461,91,1.633,92,1.633,93,1.534,102,4.035,107,2.184,108,1.633,109,1.534,111,1.633,112,2.184,122,2.556,128,2.83,129,1.863,134,1.742,150,2.155,152,1.742,157,2.337,172,2.155,212,2.675,213,1.863,215,2.337,220,4.276,373,2.556,419,3.196,420,3.196,421,3.753,422,3.753,423,3.785,424,3.753,425,5.02,426,3.753,427,3.753,428,3.753,429,3.753]],["title/injectables/FakeapiService.html",[196,1.074,378,2.406]],["body/injectables/FakeapiService.html",[3,0.265,4,0.234,8,0.234,15,2.75,20,0.586,22,2.722,24,2.292,26,1.379,29,1.601,31,1.697,32,0.023,33,1.196,34,0.82,35,1.697,37,1.757,43,0.78,44,0.586,50,0.265,51,0.628,52,2.151,84,0.016,85,0.016,134,1.874,193,3.124,196,1.601,197,1.553,205,1.874,243,2.005,249,3.439,250,5.294,252,4.487,270,3.045,321,2.319,325,3.124,369,3.439,378,3.588,400,3.439,430,3.439,431,5.269,432,4.038,433,5.269,434,4.038,435,4.038,436,4.038]],["title/injectables/GetUserEffect.html",[196,1.074,231,2.406]],["body/injectables/GetUserEffect.html",[3,0.214,4,0.189,8,0.189,20,0.474,21,0.975,26,1.557,29,1.386,31,1.05,32,0.023,33,0.74,34,0.507,35,1.05,40,1.419,41,1.254,43,0.8,44,0.474,48,2.221,50,0.214,51,0.507,84,0.014,85,0.014,129,1.619,156,2.264,184,3.034,186,3.581,196,1.386,197,1.254,198,2.221,199,4.293,200,3.884,205,3.018,231,3.106,240,2.288,242,3.164,243,1.619,246,4.478,265,2.031,266,1.873,376,2.221,377,4.228,380,3.581,381,3.106,391,2.221,393,3.581,394,3.581,395,2.221,401,3.02,437,2.778,438,3.261,439,4.56,440,5.694,441,4.56,442,3.438,443,4.56,444,3.261,445,2.031,446,2.459,447,2.459,448,3.261]],["title/injectables/LoginEffect.html",[196,1.074,229,2.406]],["body/injectables/LoginEffect.html",[3,0.189,4,0.167,8,0.167,20,0.418,21,0.892,26,1.424,29,1.491,31,0.926,32,0.023,33,0.653,34,0.448,35,0.926,40,1.814,41,1.603,43,0.805,44,0.418,50,0.189,51,0.448,84,0.013,85,0.013,129,1.428,134,1.335,152,1.335,184,2.866,186,3.341,196,1.267,197,1.106,198,1.959,205,2.764,229,2.84,240,2.134,242,3.05,243,1.428,247,3.699,265,1.791,266,1.652,376,1.959,377,4.056,380,3.89,381,3.664,387,3.144,388,3.699,391,1.959,393,1.959,394,1.959,395,3.341,401,3.09,442,3.144,445,1.791,449,2.45,450,4.178,451,5.232,452,2.876,453,4.17,454,4.17,455,4.17,456,3.551,457,3.551,458,4.17,459,4.17,460,3.551,461,2.876,462,4.17,463,3.551,464,3.551,465,3.144,466,2.876,467,1.959,468,2.169,469,2.169,470,2.876]],["title/interfaces/LoginRequestInterface.html",[167,0.802,258,2.406]],["body/interfaces/LoginRequestInterface.html",[3,0.324,4,0.286,8,0.286,20,0.718,21,1.279,32,0.022,34,1.001,39,2.777,50,0.324,84,0.019,85,0.019,167,1.122,168,2.02,239,3.563,258,4.075,368,3.078,471,4.21,472,5.096,473,3.366]],["title/components/MainLayoutComponent.html",[0,0.627,70,1.206]],["body/components/MainLayoutComponent.html",[0,0.99,1,1.175,2,2.143,3,0.239,4,0.211,5,1.693,6,1.693,7,1.693,8,0.211,12,1.693,13,3.204,14,2.426,16,2.286,18,2.286,32,0.022,33,1.118,43,0.458,44,0.53,50,0.239,51,0.568,54,0.932,55,2.286,56,2.286,57,1.693,58,2.771,59,1.693,60,1.693,61,1.321,62,3.1,63,1.693,64,1.402,65,1.693,66,1.321,67,1.693,68,1.321,69,1.693,70,2.038,71,3.141,72,1.693,73,1.321,74,1.693,75,1.321,76,2.143,77,1.693,78,1.321,79,1.693,80,1.321,81,1.693,82,1.693,83,1.693,84,0.015,85,0.015,154,2.484,474,3.107,475,3.107,476,5.97,477,4.925,478,4.925,479,4.925]],["title/modules/MainModule.html",[86,0.851,103,2.201]],["body/modules/MainModule.html",[3,0.279,4,0.247,8,0.247,32,0.022,43,0.755,44,0.618,50,0.279,51,0.663,54,1.088,70,2.429,84,0.017,85,0.017,86,1.026,88,1.542,89,1.637,90,2.617,91,1.853,92,1.853,93,2.458,103,4.247,107,2.373,108,1.853,109,1.74,111,1.853,112,2.373,154,2.9,155,3.627,212,2.905,213,2.114,480,3.627,481,3.627,482,3.627,483,4.259,484,4.259]],["title/components/NotFoundComponent.html",[0,0.627,73,1.28]],["body/components/NotFoundComponent.html",[0,0.99,1,1.175,2,2.143,3,0.239,4,0.211,5,1.693,6,1.693,7,1.693,8,0.211,12,1.693,13,3.204,14,2.713,16,2.286,18,2.286,32,0.022,33,1.118,43,0.458,44,0.53,50,0.239,51,0.568,54,0.932,55,2.286,56,2.286,57,1.693,58,2.771,59,1.693,60,1.693,61,1.321,62,2.982,63,1.693,64,1.402,65,1.693,66,1.321,67,1.693,68,1.321,69,1.693,70,1.245,71,1.693,72,1.693,73,2.162,74,1.693,75,1.321,76,2.143,77,1.693,78,1.321,79,1.693,80,1.321,81,1.693,82,1.693,83,1.693,84,0.015,85,0.015,120,2.484,485,2.75,486,3.107,487,3.107,488,5.97,489,4.925,490,4.925,491,4.925,492,5.085,493,4.195]],["title/modules/NotFoundModule.html",[86,0.851,104,2.201]],["body/modules/NotFoundModule.html",[0,0.732,3,0.27,4,0.239,8,0.239,32,0.023,43,0.787,44,0.599,50,0.27,51,0.642,54,1.053,73,2.451,84,0.017,85,0.017,86,0.993,88,1.493,89,1.585,90,2.577,91,1.794,92,1.794,93,1.685,104,4.142,107,2.324,108,1.794,109,1.685,111,1.794,112,2.324,120,3.638,150,2.368,151,4.035,152,1.914,156,2.047,157,2.568,212,2.846,213,2.047,234,3.109,485,3.109,494,3.512,495,3.512,496,4.124,497,4.124,498,4.124]],["title/injectables/PersistanceService.html",[184,1.882,196,1.074]],["body/injectables/PersistanceService.html",[3,0.25,4,0.221,8,0.221,15,2.598,20,0.554,24,2.208,26,1.947,29,1.733,31,1.634,32,0.023,33,1.152,34,0.79,35,1.634,37,2.208,38,2.704,39,3.021,43,0.479,44,0.554,50,0.25,51,0.593,84,0.016,85,0.016,184,2.704,196,1.542,205,2.355,243,1.894,260,5.391,270,2.876,285,2.032,319,4.322,499,3.249,500,5.074,501,3.814,502,5.074,503,3.814,504,5.074,505,3.814,506,5.074,507,3.814,508,3.814,509,5.074,510,6.079,511,5.074,512,3.814,513,3.814,514,3.814,515,3.814,516,3.249]],["title/injectables/RegisterEffect.html",[196,1.074,218,2.406]],["body/injectables/RegisterEffect.html",[3,0.175,4,0.155,8,0.155,20,0.388,21,0.845,26,1.349,29,1.429,31,0.861,32,0.023,33,0.607,34,0.416,35,0.861,40,1.719,41,1.519,43,0.79,44,0.388,50,0.175,51,0.416,84,0.012,85,0.012,129,1.327,134,1.24,152,1.24,184,2.767,186,3.202,196,1.201,197,1.028,198,1.82,205,2.693,218,2.691,240,2.046,242,2.981,243,1.327,248,3.545,265,1.664,266,1.535,280,2.691,376,1.82,377,3.952,380,3.775,381,3.538,387,2.979,388,3.545,391,1.82,393,1.82,394,3.202,395,3.202,401,2.983,442,2.979,445,1.664,450,4.004,451,5.113,456,3.365,457,3.365,460,3.365,463,3.365,464,3.365,465,2.979,517,2.276,518,2.672,519,3.951,520,2.979,521,3.951,522,3.545,523,3.545,524,3.951,525,2.672,526,3.951,527,2.672,528,1.664,529,2.672]],["title/interfaces/RegisterRequestInterface.html",[167,0.802,262,2.029]],["body/interfaces/RegisterRequestInterface.html",[3,0.321,4,0.284,8,0.284,20,0.712,21,1.273,32,0.022,34,0.997,39,2.976,50,0.321,84,0.018,85,0.018,167,1.113,168,2.003,239,3.552,262,3.419,368,3.052,372,3.338,472,5.07,473,3.338,530,4.174]],["title/components/SignInComponent.html",[0,0.627,75,1.28]],["body/components/SignInComponent.html",[0,0.752,1,0.725,2,1.51,3,0.148,4,0.13,5,1.045,6,1.045,7,1.045,8,0.13,12,1.045,13,2.895,14,1.843,16,1.611,18,1.611,20,0.327,21,0.742,22,1.966,24,1.51,25,3.243,26,1.185,28,3.253,29,1.777,31,0.725,32,0.022,33,0.962,34,0.741,35,0.725,37,2.071,38,3.116,43,0.783,44,0.327,45,0.92,46,0.979,47,1.293,50,0.148,51,0.35,54,0.575,55,1.611,56,1.611,57,1.045,58,2.21,59,1.045,60,1.045,61,0.815,62,2.714,63,1.045,64,0.865,65,1.045,66,0.815,67,1.045,68,0.815,69,1.045,70,0.768,71,1.045,72,1.045,73,0.815,74,1.045,75,1.724,76,2.82,77,1.045,78,0.815,79,1.045,80,0.815,81,1.045,82,1.045,83,1.045,84,0.011,85,0.011,156,1.117,193,2.74,197,0.865,215,1.402,225,4.524,233,2.364,239,1.199,242,2.811,262,1.993,264,1.697,283,2.885,287,1.199,288,1.533,297,3.194,344,1.402,368,1.402,372,1.533,401,2.433,445,1.402,467,1.533,473,1.533,520,1.697,528,1.402,531,4.524,532,1.917,533,3.471,534,3.471,535,3.608,536,4.055,537,4.055,538,4.055,539,1.917,540,4.055,541,3.471,542,2.956,543,2.251,544,2.251,545,2.251,546,2.251,547,3.608,548,2.251,549,2.251,550,1.917,551,1.917,552,1.533,553,1.533,554,1.917,555,2.251,556,1.917,557,1.917,558,1.917,559,1.917,560,1.917,561,1.917,562,1.917,563,1.917,564,3.608,565,1.917,566,2.251,567,2.956]],["title/components/SignUpComponent.html",[0,0.627,78,1.28]],["body/components/SignUpComponent.html",[0,0.734,1,0.698,2,1.467,3,0.142,4,0.126,5,1.006,6,1.006,7,1.006,8,0.126,12,1.006,13,2.867,14,1.8,16,1.564,18,1.564,20,0.315,21,0.721,22,1.92,24,1.467,25,3.178,26,1.151,28,3.208,29,1.755,31,0.698,32,0.023,33,0.939,34,0.726,35,0.698,37,2.03,38,3.077,43,0.761,44,0.315,45,0.886,46,0.943,47,1.245,50,0.142,51,0.337,54,0.553,55,1.564,56,1.564,57,1.006,58,2.166,59,1.006,60,1.006,61,0.785,62,2.681,63,1.006,64,0.833,65,1.006,66,0.785,67,1.006,68,0.785,69,1.006,70,0.74,71,1.006,72,1.006,73,0.785,74,1.006,75,0.785,76,2.729,77,1.006,78,1.69,79,1.006,80,0.785,81,1.006,82,1.006,83,1.006,84,0.01,85,0.01,156,1.076,193,2.693,197,0.833,215,1.35,227,4.473,233,3.645,239,1.155,242,2.773,262,1.936,264,1.634,283,2.817,287,1.155,288,1.476,297,3.119,344,1.35,368,1.35,372,1.476,401,2.375,445,1.35,473,1.476,520,2.542,528,1.35,531,4.473,535,3.523,536,3.974,537,3.974,538,3.974,539,1.846,540,3.974,542,2.871,547,3.523,550,1.846,551,1.846,552,1.476,553,1.476,554,1.846,556,1.846,557,1.846,558,1.846,559,1.846,560,1.846,561,1.846,562,1.846,563,1.846,564,3.523,565,1.846,567,2.871,568,1.846,569,3.371,570,3.371,571,3.371,572,2.167,573,2.167,574,2.167,575,2.167,576,2.167,577,2.167,578,2.167]],["title/components/TopbarComponent.html",[0,0.627,80,1.28]],["body/components/TopbarComponent.html",[0,0.82,1,0.836,2,1.682,3,0.17,4,0.15,5,1.205,6,1.205,7,1.205,8,0.15,12,1.205,13,2.995,14,2.011,16,1.795,18,1.795,20,0.377,21,0.827,22,2.899,26,0.886,27,1.768,28,3.297,29,1.556,31,0.836,32,0.023,33,1.049,34,0.797,35,0.836,40,2.011,41,1.777,42,2.915,43,0.721,44,0.377,45,1.061,46,1.129,47,1.491,50,0.17,51,0.404,52,1.383,54,0.663,55,1.795,56,1.795,57,1.205,58,2.377,59,1.205,60,1.205,61,0.94,62,2.837,63,1.205,64,0.998,65,1.205,66,0.94,67,1.205,68,0.94,69,1.205,70,0.886,71,1.205,72,1.205,73,0.94,74,1.205,75,0.94,76,2.498,77,1.205,78,0.94,79,1.205,80,1.854,81,2.145,82,1.205,83,1.205,84,0.012,85,0.012,193,3.168,197,0.998,233,2.633,240,1.129,266,1.491,280,3.729,282,3.484,341,4.361,344,1.616,493,3.293,579,2.21,580,3.867,581,3.867,582,4.621,583,2.595,584,3.867,585,2.595,586,3.867,587,2.595,588,3.867,589,2.595,590,1.957,591,1.957,592,1.957,593,2.595,594,5.741,595,2.915,596,3.867,597,3.867,598,3.867]],["title/modules/TopbarModule.html",[86,0.851,105,2.201]],["body/modules/TopbarModule.html",[3,0.275,4,0.243,8,0.243,32,0.022,43,0.792,44,0.61,50,0.275,51,0.653,54,1.072,80,2.572,84,0.017,85,0.017,86,1.011,88,1.52,89,1.614,90,2.599,91,1.826,92,1.826,93,2.442,105,4.233,107,2.351,108,1.826,109,1.715,111,1.826,112,2.351,150,3.103,152,1.948,212,2.878,213,2.084,599,3.575,600,3.575,601,3.575,602,4.198,603,4.198]],["title/coverage.html",[604,4.105]],["body/coverage.html",[0,1.014,1,0.619,8,0.111,9,1.637,32,0.023,34,0.299,46,0.836,48,1.309,61,0.696,64,1.471,66,0.696,68,0.696,70,0.656,73,0.696,75,0.696,78,0.696,80,0.696,84,0.01,85,0.01,106,1.197,120,1.309,125,1.909,154,1.309,167,1.329,169,1.637,172,1.104,173,1.024,174,1.104,175,1.024,179,1.637,181,1.637,184,1.024,196,1.621,216,1.449,218,1.309,222,1.309,225,1.449,227,1.449,229,1.309,231,1.309,237,1.309,238,1.637,240,0.836,242,0.954,244,1.637,258,1.309,262,1.104,279,1.637,287,1.024,289,1.449,290,1.637,291,1.637,317,1.637,321,1.104,322,2.312,327,1.637,339,5.459,345,1.449,347,1.449,349,1.449,361,1.449,364,1.637,365,1.637,373,1.309,374,1.637,378,1.309,396,1.309,397,1.449,398,1.449,402,1.637,412,1.449,423,1.449,430,1.637,437,1.637,446,1.449,447,1.449,449,1.637,467,1.309,468,1.449,469,1.449,471,1.637,474,1.637,475,1.637,485,1.449,486,1.637,487,1.637,499,1.637,517,1.637,522,1.449,523,1.449,528,1.197,530,1.637,531,2.312,532,1.637,552,1.309,553,1.309,568,1.637,579,1.637,590,1.449,591,1.449,592,1.449,595,1.449,604,1.637,605,1.922,606,1.922,607,1.922,608,5.084,609,3.825,610,3.066,611,4.366,612,3.258,613,6.94,614,7.046,615,3.258,616,3.258,617,5.084,618,2.884,619,4.366,620,2.611,621,3.258,622,4.33,623,1.637,624,1.922,625,1.637,626,1.637,627,2.884,628,2.611,629,1.637,630,3.066,631,3.258,632,3.292,633,1.449,634,2.611,635,1.637,636,1.637,637,1.637,638,1.922,639,1.922]],["title/dependencies.html",[89,1.634,640,2.226]],["body/dependencies.html",[32,0.023,44,0.644,45,2.287,84,0.017,85,0.017,89,1.706,115,4.623,116,4.22,124,3.778,129,2.202,152,2.059,165,3.345,197,1.706,213,2.202,215,2.763,641,4.436,642,7.025,643,4.436,644,4.436,645,4.436,646,3.778,647,4.436,648,5.596,649,4.436,650,4.436,651,4.436,652,4.436,653,4.436,654,4.436,655,4.436]],["title/miscellaneous/enumerations.html",[656,1.695,657,3.619]],["body/miscellaneous/enumerations.html",[20,0.559,32,0.022,41,2.725,84,0.016,85,0.016,170,5.828,171,3.479,172,3.291,239,3.053,247,4.601,248,4.601,330,4.35,333,4.35,417,4.881,656,2.212,657,3.281,658,5.108,659,3.852,660,5.108,661,5.108,662,6.102,663,5.108,664,3.852,665,3.852,666,6.102,667,3.852,668,6.102,669,3.852,670,3.852,671,3.852,672,3.852,673,3.852,674,3.852,675,3.852,676,3.852,677,3.852,678,3.852]],["title/miscellaneous/functions.html",[656,1.695,679,3.619]],["body/miscellaneous/functions.html",[20,0.642,31,1.971,32,0.021,33,1.39,34,0.952,35,1.971,84,0.017,85,0.017,173,2.975,174,3.206,175,2.975,216,4.21,361,4.21,423,4.21,618,3.332,627,3.332,632,3.332,633,4.615,656,2.538,679,3.764,680,3.764,681,4.755,682,3.764,683,4.42,684,6.092,685,5.213,686,4.42,687,4.42]],["title/index.html",[20,0.429,516,2.514,688,2.952]],["body/index.html",[0,1.009,4,0.219,10,2.857,32,0.016,33,0.86,42,2.857,84,0.016,85,0.016,109,1.549,165,3.81,492,3.228,595,2.857,640,2.857,646,3.228,689,5.052,690,3.789,691,5.684,692,5.684,693,3.228,694,3.789,695,6.315,696,6.631,697,3.789,698,3.789,699,3.789,700,3.789,701,3.789,702,3.789,703,3.789,704,3.789,705,3.789,706,3.789,707,3.789,708,5.684,709,5.684,710,3.789,711,6.063,712,3.789,713,3.789,714,3.789,715,3.789,716,5.052,717,5.052,718,6.063,719,3.789,720,5.052,721,5.052,722,3.789,723,6.496,724,3.789,725,3.789,726,3.789,727,5.052,728,3.789,729,3.789,730,3.789,731,3.789,732,3.789,733,3.789,734,5.684,735,3.789,736,3.789,737,3.789,738,2.857,739,3.789]],["title/modules.html",[88,1.745]],["body/modules.html",[32,0.018,84,0.018,85,0.018,87,2.838,88,1.65,99,2.838,100,2.838,101,2.838,102,2.838,103,2.838,104,2.838,105,2.838,116,5.322,159,3.104,210,2.838,740,7.058,741,7.058,742,7.107,743,4.557,744,4.557]],["title/overview.html",[738,3.634]],["body/overview.html",[1,2.081,2,1.289,32,0.022,54,0.757,61,2.245,66,1.807,68,1.807,70,2.116,73,1.807,75,1.807,78,1.807,80,2.245,84,0.013,85,0.013,86,0.714,87,4.408,88,1.073,89,1.139,90,1.289,91,1.289,92,1.289,93,1.211,94,2.524,95,2.524,96,2.524,97,2.524,98,2.524,99,3.107,100,4.024,101,3.599,102,3.599,103,3.747,104,3.599,105,3.747,106,3.107,107,1.854,108,1.289,109,1.211,159,3.936,160,2.524,168,1.211,207,2.524,208,2.524,209,2.524,210,3.747,243,1.471,311,2.524,312,2.524,313,2.524,357,2.524,358,2.524,419,2.524,420,2.524,480,2.524,481,2.524,482,2.524,494,2.524,495,2.524,599,2.524,600,2.524,601,2.524,738,2.235,745,4.261,746,2.964,747,2.964]],["title/properties.html",[21,0.909,640,2.226]],["body/properties.html",[21,1.187,32,0.021,84,0.02,85,0.02,693,4.729,748,5.553]],["title/miscellaneous/variables.html",[656,1.695,749,3.619]],["body/miscellaneous/variables.html",[20,0.219,32,0.023,34,0.654,40,2.929,41,2.614,46,1.409,48,2.206,84,0.008,85,0.008,125,2.354,147,4.1,172,1.446,173,3.227,174,2.413,175,2.418,280,2.861,281,3.219,282,3.168,283,3.279,284,3.865,285,2.791,324,2.206,326,1.715,339,1.138,345,1.899,347,2.442,349,2.442,396,2.206,397,2.442,398,2.442,410,2.145,412,1.899,446,2.442,447,2.442,465,4.185,467,2.206,468,2.442,469,2.442,522,2.442,523,2.442,528,2.017,552,1.715,553,1.715,590,1.899,591,1.899,592,1.899,612,1.286,615,1.286,616,1.286,618,1.138,620,3.219,621,4.462,622,1.286,623,4.1,625,1.286,626,1.286,627,1.138,628,1.286,629,2.759,631,1.286,632,1.138,633,1.138,634,1.286,635,2.759,636,1.286,637,1.286,656,0.867,680,2.145,681,2.145,682,2.145,684,4.727,685,5.714,749,1.286,750,4.538,751,2.518,752,2.518,753,1.51,754,1.51,755,1.51,756,3.239,757,3.239,758,1.51,759,3.239,760,3.239,761,1.51,762,4.814,763,4.201,764,1.51,765,2.518,766,1.51,767,1.51,768,3.239,769,3.239,770,2.518,771,2.518,772,2.518,773,1.51,774,1.51,775,1.51,776,1.51,777,1.51,778,2.518,779,2.518,780,2.518,781,2.518,782,2.518,783,2.518,784,1.51,785,1.51,786,5.55,787,1.51,788,5.239,789,1.51,790,1.51,791,1.51,792,1.51,793,1.51,794,1.51,795,1.51,796,1.51,797,1.51,798,1.51,799,1.51,800,1.51]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":339,"title":{},"body":{"components/CounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":748,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":410,"title":{},"body":{"components/FakeapiComponent.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":745,"title":{},"body":{"overview.html":{}}}],["17.0.0",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["17.0.1",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["17.0.7",{"_index":646,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.2.0",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["4.18.2",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":491,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["55",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":747,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":746,"title":{},"body":{"overview.html":{}}}],["account",{"_index":567,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["action",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["action.comment",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action.currentuser",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action.errors",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions",{"_index":377,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["actions.enum.ts",{"_index":662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actions/getcomment.action",{"_index":399,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["actions/getuser.action",{"_index":448,"title":{},"body":{"injectables/GetUserEffect.html":{}}}],["actions/login.action",{"_index":470,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["actions/register.action",{"_index":529,"title":{},"body":{"injectables/RegisterEffect.html":{}}}],["actiontypes",{"_index":658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiontypes.get_current_user_failure",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontypes.get_current_user_success",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontypes.login",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontypes.login_failure",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontypes.login_success",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontypes.register",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontypes.register_failure",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontypes.register_success",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["add",{"_index":730,"title":{},"body":{"index.html":{}}}],["angular",{"_index":691,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/FakeApiEffect.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["angular/compiler",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"modules/FakeapiModule.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"injectables/LoginEffect.html":{},"modules/NotFoundModule.html":{},"injectables/RegisterEffect.html":{},"modules/TopbarModule.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["apiurl",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["app.component",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":166,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app/auth/models/authstate.interface",{"_index":176,"title":{},"body":{"interfaces/AppStateInterface.html":{}}}],["app/counter/models/counter.model",{"_index":177,"title":{},"body":{"interfaces/AppStateInterface.html":{}}}],["app/fakeapi/models/fakeapi.interface",{"_index":178,"title":{},"body":{"interfaces/AppStateInterface.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":701,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":87,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":99,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":159,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appstateinterface",{"_index":46,"title":{"interfaces/AppStateInterface.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppStateInterface.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":712,"title":{},"body":{"index.html":{}}}],["async",{"_index":355,"title":{},"body":{"components/CounterComponent.html":{},"components/FakeapiComponent.html":{}}}],["async)?.username",{"_index":598,"title":{},"body":{"components/TopbarComponent.html":{}}}],["auth",{"_index":170,"title":{},"body":{"interfaces/AppStateInterface.html":{},"miscellaneous/enumerations.html":{}}}],["auth/auth.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/store/actions/getuser.action",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/store/selectors",{"_index":593,"title":{},"body":{"components/TopbarComponent.html":{}}}],["auth/utils/interceptors/auth.interceptor",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["authfeatureselector",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":106,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":100,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":203,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authreducer",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authresponseinterface",{"_index":237,"title":{"interfaces/AuthResponseInterface.html":{}},"body":{"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authservice",{"_index":242,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["authstate",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authstate.currentuser",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authstate.isloggedin",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authstate.issubmitting",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authstate.validationerrors",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authstateinterface",{"_index":173,"title":{"interfaces/AuthStateInterface.html":{}},"body":{"interfaces/AppStateInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":702,"title":{},"body":{"index.html":{}}}],["available",{"_index":744,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["backenderrormessagescomponent",{"_index":61,"title":{"components/BackendErrorMessagesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["backenderrormessagesmodule",{"_index":210,"title":{"modules/BackendErrorMessagesModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["backenderrors",{"_index":297,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["backenderrorsinterface",{"_index":287,"title":{"interfaces/BackendErrorsInterface.html":{}},"body":{"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"interfaces/BackendErrorsInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["backenderrorsprop",{"_index":303,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["bearer",{"_index":204,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["bio",{"_index":366,"title":{},"body":{"interfaces/CurrentUserInterface.html":{}}}],["body",{"_index":323,"title":{},"body":{"interfaces/CommentInterface.html":{},"interfaces/FakeApiStateInterface.html":{}}}],["boolean",{"_index":286,"title":{},"body":{"interfaces/AuthStateInterface.html":{}}}],["bootstrap",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"overview.html":{}}}],["browse",{"_index":742,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":711,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":732,"title":{},"body":{"index.html":{}}}],["catch",{"_index":509,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["catcherror",{"_index":393,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["catcherror((errorresponse",{"_index":387,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["change",{"_index":704,"title":{},"body":{"index.html":{}}}],["check",{"_index":737,"title":{},"body":{"index.html":{}}}],["choice",{"_index":726,"title":{},"body":{"index.html":{}}}],["class",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{}}}],["cli",{"_index":692,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":160,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":162,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":161,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_authmodule",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backenderrormessagesmodule",{"_index":311,"title":{},"body":{"modules/BackendErrorMessagesModule.html":{},"overview.html":{}}}],["cluster_backenderrormessagesmodule_declarations",{"_index":313,"title":{},"body":{"modules/BackendErrorMessagesModule.html":{},"overview.html":{}}}],["cluster_backenderrormessagesmodule_exports",{"_index":312,"title":{},"body":{"modules/BackendErrorMessagesModule.html":{},"overview.html":{}}}],["cluster_countermodule",{"_index":357,"title":{},"body":{"modules/CounterModule.html":{},"overview.html":{}}}],["cluster_countermodule_declarations",{"_index":358,"title":{},"body":{"modules/CounterModule.html":{},"overview.html":{}}}],["cluster_fakeapimodule",{"_index":419,"title":{},"body":{"modules/FakeapiModule.html":{},"overview.html":{}}}],["cluster_fakeapimodule_declarations",{"_index":420,"title":{},"body":{"modules/FakeapiModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":480,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declarations",{"_index":481,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_exports",{"_index":482,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_notfoundmodule",{"_index":494,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_notfoundmodule_declarations",{"_index":495,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_topbarmodule",{"_index":599,"title":{},"body":{"modules/TopbarModule.html":{},"overview.html":{}}}],["cluster_topbarmodule_declarations",{"_index":601,"title":{},"body":{"modules/TopbarModule.html":{},"overview.html":{}}}],["cluster_topbarmodule_exports",{"_index":600,"title":{},"body":{"modules/TopbarModule.html":{},"overview.html":{}}}],["code",{"_index":706,"title":{},"body":{"index.html":{}}}],["command",{"_index":727,"title":{},"body":{"index.html":{}}}],["comment",{"_index":417,"title":{},"body":{"components/FakeapiComponent.html":{},"miscellaneous/enumerations.html":{}}}],["commentid",{"_index":415,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["commentinterface",{"_index":321,"title":{"interfaces/CommentInterface.html":{}},"body":{"interfaces/CommentInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"injectables/FakeapiService.html":{},"coverage.html":{}}}],["commentselector",{"_index":412,"title":{},"body":{"components/FakeapiComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"overview.html":{}}}],["components/backend",{"_index":315,"title":{},"body":{"modules/BackendErrorMessagesModule.html":{}}}],["components/counter/counter.component",{"_index":360,"title":{},"body":{"modules/CounterModule.html":{}}}],["components/fakeapi/fakeapi.component",{"_index":422,"title":{},"body":{"modules/FakeapiModule.html":{}}}],["components/main",{"_index":484,"title":{},"body":{"modules/MainModule.html":{}}}],["components/not",{"_index":497,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["components/sign",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/topbar/topbar.component",{"_index":603,"title":{},"body":{"modules/TopbarModule.html":{}}}],["console.error('error",{"_index":511,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["console.log('data",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/CounterModule.html":{},"injectables/GetUserEffect.html":{},"modules/NotFoundModule.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CounterComponent.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(actions",{"_index":376,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["constructor(fb",{"_index":539,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(http",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeapiService.html":{}}}],["constructor(persistance",{"_index":183,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"components/TopbarComponent.html":{}}}],["constructor(store",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/TopbarComponent.html":{}}}],["counter",{"_index":171,"title":{},"body":{"interfaces/AppStateInterface.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"miscellaneous/enumerations.html":{}}}],["counter'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["counter.component.html",{"_index":328,"title":{},"body":{"components/CounterComponent.html":{}}}],["counter.component.scss",{"_index":329,"title":{},"body":{"components/CounterComponent.html":{}}}],["counter/counter.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["counteraction",{"_index":660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countercomponent",{"_index":66,"title":{"components/CounterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["counterfeatureselector",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["countermodule",{"_index":101,"title":{"modules/CounterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CounterModule.html":{},"modules.html":{},"overview.html":{}}}],["counterreducer",{"_index":361,"title":{},"body":{"modules/CounterModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["counterreducer(state",{"_index":683,"title":{},"body":{"miscellaneous/functions.html":{}}}],["counterstate",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counterstate.currentcomment",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counterstate.value",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counterstateinterface",{"_index":174,"title":{"interfaces/CounterStateInterface.html":{}},"body":{"interfaces/AppStateInterface.html":{},"interfaces/CounterStateInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["countervalueselector",{"_index":345,"title":{},"body":{"components/CounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":604,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(actiontypes.get_current_user",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(counteraction.decrement",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction(counteraction.increment",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":367,"title":{},"body":{"interfaces/CurrentUserInterface.html":{}}}],["createeffect",{"_index":380,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["createreducer",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentcomment",{"_index":326,"title":{},"body":{"interfaces/CommentInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"miscellaneous/variables.html":{}}}],["currentcommentid",{"_index":324,"title":{},"body":{"interfaces/CommentInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"miscellaneous/variables.html":{}}}],["currentuser",{"_index":280,"title":{},"body":{"interfaces/AuthStateInterface.html":{},"injectables/RegisterEffect.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["currentuser.interface",{"_index":241,"title":{},"body":{"interfaces/AuthResponseInterface.html":{}}}],["currentuser.token",{"_index":457,"title":{},"body":{"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["currentuserinterface",{"_index":240,"title":{"interfaces/CurrentUserInterface.html":{}},"body":{"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["currentuserselector",{"_index":590,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PersistanceService.html":{}}}],["declarations",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"overview.html":{}}}],["decrement",{"_index":330,"title":{},"body":{"components/CounterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["decrementaction",{"_index":349,"title":{},"body":{"components/CounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BackendErrorMessagesComponent.html":{},"interfaces/BackendErrorsInterface.html":{},"components/CounterComponent.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["dependencies",{"_index":89,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":698,"title":{},"body":{"index.html":{}}}],["development",{"_index":694,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["directive",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":710,"title":{},"body":{"index.html":{}}}],["directory",{"_index":715,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":464,"title":{},"body":{"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["dispatchdecrement",{"_index":331,"title":{},"body":{"components/CounterComponent.html":{}}}],["dispatchincrement",{"_index":332,"title":{},"body":{"components/CounterComponent.html":{}}}],["dist",{"_index":714,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["dynamic",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":510,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["e2e",{"_index":724,"title":{},"body":{"index.html":{}}}],["effectsmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FakeapiModule.html":{}}}],["effectsmodule.forfeature([fakeapieffect",{"_index":429,"title":{},"body":{"modules/FakeapiModule.html":{}}}],["effectsmodule.forfeature([registereffect",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodule.forroot",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["email",{"_index":368,"title":{},"body":{"interfaces/CurrentUserInterface.html":{},"interfaces/LoginRequestInterface.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["end",{"_index":723,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":657,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{}}}],["error",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["errormessage",{"_index":310,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["errormessages",{"_index":295,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["errorresponse.error.errors",{"_index":460,"title":{},"body":{"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["errors",{"_index":524,"title":{},"body":{"injectables/RegisterEffect.html":{}}}],["execute",{"_index":720,"title":{},"body":{"index.html":{}}}],["export",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{}}}],["exports",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"overview.html":{}}}],["express",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["failure",{"_index":668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fakeapi",{"_index":172,"title":{},"body":{"interfaces/AppStateInterface.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fakeapi'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["fakeapi.component.html",{"_index":403,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["fakeapi.component.scss",{"_index":404,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["fakeapi/fakeapi.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["fakeapiactionenum",{"_index":663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fakeapiactionenum.get_comment",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakeapiactionenum.get_comment_failure",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakeapiactionenum.get_comment_success",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fakeapicomponent",{"_index":68,"title":{"components/FakeapiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fakeapieffect",{"_index":373,"title":{"injectables/FakeApiEffect.html":{}},"body":{"injectables/FakeApiEffect.html":{},"modules/FakeapiModule.html":{},"coverage.html":{}}}],["fakeapifeatureselector",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fakeapimodule",{"_index":102,"title":{"modules/FakeapiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FakeapiModule.html":{},"modules.html":{},"overview.html":{}}}],["fakeapireducer",{"_index":423,"title":{},"body":{"modules/FakeapiModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fakeapireducer(state",{"_index":686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fakeapiservice",{"_index":378,"title":{"injectables/FakeapiService.html":{}},"body":{"injectables/FakeApiEffect.html":{},"injectables/FakeapiService.html":{},"coverage.html":{}}}],["fakeapistateinterface",{"_index":175,"title":{"interfaces/FakeApiStateInterface.html":{}},"body":{"interfaces/AppStateInterface.html":{},"interfaces/CommentInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":465,"title":{},"body":{"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":542,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{},"coverage.html":{}}}],["files",{"_index":705,"title":{},"body":{"index.html":{}}}],["first",{"_index":729,"title":{},"body":{"index.html":{}}}],["form",{"_index":535,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formbuilder",{"_index":540,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formgroup",{"_index":547,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["formsmodule",{"_index":425,"title":{},"body":{"modules/FakeapiModule.html":{}}}],["found",{"_index":488,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["found.component",{"_index":498,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found.component.html",{"_index":489,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":490,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":487,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["found.module.ts",{"_index":496,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found/components/not",{"_index":486,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"coverage.html":{}}}],["function",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":679,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":733,"title":{},"body":{"index.html":{}}}],["generate",{"_index":708,"title":{},"body":{"index.html":{}}}],["generated",{"_index":690,"title":{},"body":{"index.html":{}}}],["get(environment.apiurl",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(key",{"_index":502,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["get_comment",{"_index":676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_comment_failure",{"_index":678,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_comment_success",{"_index":677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_current_user",{"_index":671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_current_user_failure",{"_index":673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_current_user_success",{"_index":672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["getcomment",{"_index":431,"title":{},"body":{"injectables/FakeapiService.html":{}}}],["getcomment(id",{"_index":433,"title":{},"body":{"injectables/FakeapiService.html":{}}}],["getcommentaction",{"_index":396,"title":{},"body":{"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcommenteffect",{"_index":375,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["getcommentfailureaction",{"_index":397,"title":{},"body":{"injectables/FakeApiEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcommentsuccessaction",{"_index":398,"title":{},"body":{"injectables/FakeApiEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcommentsuccessaction({comment",{"_index":386,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["getcurrentcomment",{"_index":405,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["getcurrentuser",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["getnumber",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":516,"title":{"index.html":{}},"body":{"injectables/PersistanceService.html":{}}}],["getuser",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GetUserEffect.html":{}}}],["getuser(response",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuseraction",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/GetUserEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getusereffect",{"_index":231,"title":{"injectables/GetUserEffect.html":{}},"body":{"modules/AuthModule.html":{},"injectables/GetUserEffect.html":{},"coverage.html":{}}}],["getuserfailureaction",{"_index":446,"title":{},"body":{"injectables/GetUserEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getusersuccessaction",{"_index":447,"title":{},"body":{"injectables/GetUserEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getusersuccessaction({currentuser",{"_index":443,"title":{},"body":{"injectables/GetUserEffect.html":{}}}],["go",{"_index":736,"title":{},"body":{"index.html":{}}}],["graph",{"_index":743,"title":{},"body":{"modules.html":{}}}],["help",{"_index":734,"title":{},"body":{"index.html":{}}}],["home",{"_index":493,"title":{},"body":{"components/NotFoundComponent.html":{},"components/TopbarComponent.html":{}}}],["html",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["http",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeapiService.html":{}}}],["http://localhost:4200",{"_index":700,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["httpclient",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeapiService.html":{}}}],["httpclientmodule",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{},"modules/FakeapiModule.html":{}}}],["httperrorresponse",{"_index":388,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["httpevent",{"_index":194,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":190,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":195,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":188,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://api.realworld.io/api",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://conduit.productionready.io/api",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://jsonplaceholder.typicode.com/comments/${id",{"_index":436,"title":{},"body":{"injectables/FakeapiService.html":{}}}],["id",{"_index":369,"title":{},"body":{"interfaces/CurrentUserInterface.html":{},"injectables/FakeapiService.html":{}}}],["identifier",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":370,"title":{},"body":{"interfaces/CurrentUserInterface.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"index.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{}}}],["imports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{}}}],["in'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["in.component",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["in.component.html",{"_index":533,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":534,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts",{"_index":532,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:22",{"_index":548,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:23",{"_index":549,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:24",{"_index":541,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:32",{"_index":545,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:37",{"_index":544,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:42",{"_index":543,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:50",{"_index":546,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["increment",{"_index":333,"title":{},"body":{"components/CounterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["incrementaction",{"_index":347,"title":{},"body":{"components/CounterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":318,"title":{},"body":{"interfaces/BackendErrorsInterface.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{}}}],["initializeform",{"_index":536,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["initializevalues",{"_index":537,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["initialstate",{"_index":621,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":196,"title":{"injectables/AuthService.html":{},"injectables/FakeApiEffect.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/FakeApiEffect.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"coverage.html":{}}}],["injectables",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeApiEffect.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"overview.html":{}}}],["input",{"_index":301,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["input('backenderrors",{"_index":302,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["inputs",{"_index":296,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["intercept",{"_index":182,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":187,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":179,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":180,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":167,"title":{"interfaces/AppStateInterface.html":{},"interfaces/AuthResponseInterface.html":{},"interfaces/AuthStateInterface.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"interfaces/LoginRequestInterface.html":{},"interfaces/RegisterRequestInterface.html":{}},"body":{"interfaces/AppStateInterface.html":{},"interfaces/AuthResponseInterface.html":{},"interfaces/AuthStateInterface.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"interfaces/LoginRequestInterface.html":{},"interfaces/RegisterRequestInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":168,"title":{},"body":{"interfaces/AppStateInterface.html":{},"interfaces/AuthResponseInterface.html":{},"interfaces/AuthStateInterface.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"interfaces/LoginRequestInterface.html":{},"interfaces/RegisterRequestInterface.html":{},"overview.html":{}}}],["isanonymous",{"_index":582,"title":{},"body":{"components/TopbarComponent.html":{}}}],["isanonymousinselector",{"_index":591,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":281,"title":{},"body":{"interfaces/AuthStateInterface.html":{},"miscellaneous/variables.html":{}}}],["isloggedin",{"_index":282,"title":{},"body":{"interfaces/AuthStateInterface.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["isloggedinselector",{"_index":592,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issubmitting",{"_index":283,"title":{},"body":{"interfaces/AuthStateInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["issubmittingselector",{"_index":552,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":418,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":515,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["json.stringify(data",{"_index":508,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["karma",{"_index":722,"title":{},"body":{"index.html":{}}}],["key",{"_index":319,"title":{},"body":{"interfaces/BackendErrorsInterface.html":{},"injectables/PersistanceService.html":{}}}],["layout",{"_index":476,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["layout'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["layout.component",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{}}}],["layout.component.html",{"_index":477,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["layout.component.scss",{"_index":478,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["layout.component.ts",{"_index":475,"title":{},"body":{"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["layout/main",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"coverage.html":{}}}],["legend",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{},"overview.html":{}}}],["literal",{"_index":472,"title":{},"body":{"interfaces/LoginRequestInterface.html":{},"interfaces/RegisterRequestInterface.html":{}}}],["local",{"_index":513,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["localstorage.setitem(key",{"_index":507,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["login",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginEffect.html":{},"miscellaneous/enumerations.html":{}}}],["login(data",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["login_failure",{"_index":670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["login_success",{"_index":669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loginaction",{"_index":467,"title":{},"body":{"injectables/LoginEffect.html":{},"components/SignInComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logineffect",{"_index":229,"title":{"injectables/LoginEffect.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LoginEffect.html":{},"coverage.html":{}}}],["loginfailureaction",{"_index":468,"title":{},"body":{"injectables/LoginEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginrequestinterface",{"_index":258,"title":{"interfaces/LoginRequestInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginRequestInterface.html":{},"coverage.html":{}}}],["loginsuccessaction",{"_index":469,"title":{},"body":{"injectables/LoginEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginsuccessaction({currentuser",{"_index":458,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["logonly",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["main",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["main/components/main",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main/main.module",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["mainlayoutcomponent",{"_index":70,"title":{"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mainmodule",{"_index":103,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{}}}],["map",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["map((comment",{"_index":385,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["map((currentuser",{"_index":442,"title":{},"body":{"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["matching",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["messages",{"_index":292,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["messages'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["messages.component",{"_index":316,"title":{},"body":{"modules/BackendErrorMessagesModule.html":{}}}],["messages.component.html",{"_index":293,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["messages.component.scss",{"_index":294,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["messages.component.ts",{"_index":291,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{},"coverage.html":{}}}],["messages.component.ts:10",{"_index":298,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["messages.component.ts:12",{"_index":300,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["messages.component.ts:13",{"_index":299,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["messages.module",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["messages.module.ts",{"_index":314,"title":{},"body":{"modules/BackendErrorMessagesModule.html":{}}}],["messages/backend",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"coverage.html":{}}}],["messages/components/backend",{"_index":290,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/PersistanceService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["miscellaneous",{"_index":656,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/authstate.interface",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/fakeapi.interface",{"_index":400,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/FakeapiService.html":{}}}],["models/loginrequest.interface",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/registerrequest.interface",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["module",{"_index":86,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"overview.html":{}}}],["modules",{"_index":88,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":735,"title":{},"body":{"index.html":{}}}],["multi",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BackendErrorMessagesComponent.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":699,"title":{},"body":{"index.html":{}}}],["need",{"_index":728,"title":{},"body":{"index.html":{}}}],["new",{"_index":595,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":189,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":206,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":696,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["ngrx",{"_index":354,"title":{},"body":{"components/CounterComponent.html":{}}}],["ngrx/effects",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/FakeApiEffect.html":{},"modules/FakeapiModule.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["ngsp",{"_index":594,"title":{},"body":{"components/TopbarComponent.html":{}}}],["notfoundcomponent",{"_index":73,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notfoundmodule",{"_index":104,"title":{"modules/NotFoundModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotFoundModule.html":{},"modules.html":{},"overview.html":{}}}],["null",{"_index":285,"title":{},"body":{"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"interfaces/CommentInterface.html":{},"interfaces/CurrentUserInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"injectables/PersistanceService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":325,"title":{},"body":{"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{}}}],["object",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(this.backenderrorsprop).map",{"_index":306,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["observable",{"_index":193,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CounterComponent.html":{},"injectables/FakeapiService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["of(getcommentfailureaction",{"_index":389,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["of(getuserfailureaction",{"_index":440,"title":{},"body":{"injectables/GetUserEffect.html":{}}}],["of(loginfailureaction({errors",{"_index":459,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["oftype",{"_index":391,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["oftype(getcommentaction",{"_index":382,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["oftype(getuseraction",{"_index":439,"title":{},"body":{"injectables/GetUserEffect.html":{}}}],["oftype(loginaction",{"_index":453,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["oftype(loginsuccessaction",{"_index":462,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["oftype(registeraction",{"_index":519,"title":{},"body":{"injectables/RegisterEffect.html":{}}}],["oftype(registersuccessaction",{"_index":526,"title":{},"body":{"injectables/RegisterEffect.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["onsubmit",{"_index":538,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CounterComponent.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":738,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":640,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":492,"title":{},"body":{"components/NotFoundComponent.html":{},"index.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CounterComponent.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":473,"title":{},"body":{"interfaces/LoginRequestInterface.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/NotFoundModule.html":{}}}],["persistance",{"_index":186,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["persistanceservice",{"_index":184,"title":{"injectables/PersistanceService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"coverage.html":{}}}],["pipe(map(this.getuser",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["platform",{"_index":725,"title":{},"body":{"index.html":{}}}],["post",{"_index":596,"title":{},"body":{"components/TopbarComponent.html":{}}}],["post(environment.apiurl",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["private",{"_index":401,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["production",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":689,"title":{},"body":{"index.html":{}}}],["prop",{"_index":307,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppStateInterface.html":{},"interfaces/AuthResponseInterface.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"properties.html":{}}}],["props",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["provideclienthydration",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FakeapiService.html":{},"injectables/PersistanceService.html":{}}}],["providers",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"overview.html":{}}}],["public",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["radium",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["rd",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["reactiveformsmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["reducer",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":739,"title":{},"body":{"index.html":{}}}],["register",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RegisterEffect.html":{},"miscellaneous/enumerations.html":{}}}],["register(data",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["register_failure",{"_index":667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["register_success",{"_index":665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["registeraction",{"_index":528,"title":{},"body":{"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registereffect",{"_index":218,"title":{"injectables/RegisterEffect.html":{}},"body":{"modules/AuthModule.html":{},"injectables/RegisterEffect.html":{},"coverage.html":{}}}],["registerfailureaction",{"_index":523,"title":{},"body":{"injectables/RegisterEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerrequestinterface",{"_index":262,"title":{"interfaces/RegisterRequestInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["registersuccessaction",{"_index":522,"title":{},"body":{"injectables/RegisterEffect.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reidrectaftersuccess",{"_index":450,"title":{},"body":{"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["reload",{"_index":703,"title":{},"body":{"index.html":{}}}],["req",{"_index":192,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":201,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":520,"title":{},"body":{"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["reset",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"overview.html":{}}}],["response",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.user",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":205,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BackendErrorMessagesComponent.html":{},"injectables/FakeApiEffect.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/PersistanceService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/FakeapiService.html":{},"injectables/PersistanceService.html":{}}}],["root'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["router",{"_index":451,"title":{},"body":{"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["routermodule",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{}}}],["routermodule.forchild",{"_index":427,"title":{},"body":{"modules/FakeapiModule.html":{}}}],["routermodule.forchild(routes",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"modules/CounterModule.html":{},"modules/NotFoundModule.html":{}}}],["routermodule.forroot(routes",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CounterModule.html":{},"modules/NotFoundModule.html":{}}}],["routing.module",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":695,"title":{},"body":{"index.html":{}}}],["running",{"_index":716,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":197,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/CounterComponent.html":{},"injectables/FakeApiEffect.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["saving",{"_index":512,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["scaffolding",{"_index":707,"title":{},"body":{"index.html":{}}}],["select",{"_index":344,"title":{},"body":{"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["select(countervalueselector",{"_index":342,"title":{},"body":{"components/CounterComponent.html":{}}}],["select(isanonymousinselector",{"_index":586,"title":{},"body":{"components/TopbarComponent.html":{}}}],["select(isloggedinselector",{"_index":588,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["serve",{"_index":697,"title":{},"body":{"index.html":{}}}],["server",{"_index":165,"title":{},"body":{"modules/AppServerModule.html":{},"dependencies.html":{},"index.html":{}}}],["servermodule",{"_index":164,"title":{},"body":{"modules/AppServerModule.html":{}}}],["services/auth.service",{"_index":445,"title":{},"body":{"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["services/fakeapi.service",{"_index":392,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["set",{"_index":500,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["set(key",{"_index":504,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["setheaders",{"_index":202,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["settings",{"_index":597,"title":{},"body":{"components/TopbarComponent.html":{}}}],["shared/backend",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["shared/models/appstate.interface",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["shared/models/authresponse.interface",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/models/backenderrors.interface",{"_index":288,"title":{},"body":{"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["shared/models/currentuser.interface",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"components/TopbarComponent.html":{}}}],["shared/services/persistance.service",{"_index":198,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["shared/topbar/topbar.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["sign",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["signincomponent",{"_index":75,"title":{"components/SignInComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupcomponent",{"_index":78,"title":{"components/SignUpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simple",{"_index":356,"title":{},"body":{"components/CounterComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"modules/CounterModule.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"modules/FakeapiModule.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"components/MainLayoutComponent.html":{},"modules/MainModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{},"index.html":{}}}],["src/.../actiontypes.ts",{"_index":659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../available",{"_index":661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../counter.reducer.ts",{"_index":680,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../counter.selector.ts",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decrement.action.ts",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fakeapi.reducer.ts",{"_index":681,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../fakeapi.selector.ts",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../getcomment.action.ts",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../getuser.action.ts",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../increment.action.ts",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.action.ts",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reducer.ts",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../register.action.ts",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../selectors.ts",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.server.ts",{"_index":163,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/app.module.ts",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/components/sign",{"_index":531,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/auth/models/authstate.interface.ts",{"_index":279,"title":{},"body":{"interfaces/AuthStateInterface.html":{},"coverage.html":{}}}],["src/app/auth/models/loginrequest.interface.ts",{"_index":471,"title":{},"body":{"interfaces/LoginRequestInterface.html":{},"coverage.html":{}}}],["src/app/auth/models/registerrequest.interface.ts",{"_index":530,"title":{},"body":{"interfaces/RegisterRequestInterface.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts:14",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:17",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:20",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:29",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:35",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/store/actions/getuser.action.ts",{"_index":612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/store/actions/login.action.ts",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/store/actions/register.action.ts",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/store/actiontypes.ts",{"_index":664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/auth/store/effects/getuser.effect.ts",{"_index":437,"title":{},"body":{"injectables/GetUserEffect.html":{},"coverage.html":{}}}],["src/app/auth/store/effects/getuser.effect.ts:15",{"_index":444,"title":{},"body":{"injectables/GetUserEffect.html":{}}}],["src/app/auth/store/effects/getuser.effect.ts:32",{"_index":438,"title":{},"body":{"injectables/GetUserEffect.html":{}}}],["src/app/auth/store/effects/login.effect.ts",{"_index":449,"title":{},"body":{"injectables/LoginEffect.html":{},"coverage.html":{}}}],["src/app/auth/store/effects/login.effect.ts:17",{"_index":461,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["src/app/auth/store/effects/login.effect.ts:34",{"_index":466,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["src/app/auth/store/effects/login.effect.ts:45",{"_index":452,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["src/app/auth/store/effects/register.effect.ts",{"_index":517,"title":{},"body":{"injectables/RegisterEffect.html":{},"coverage.html":{}}}],["src/app/auth/store/effects/register.effect.ts:17",{"_index":525,"title":{},"body":{"injectables/RegisterEffect.html":{}}}],["src/app/auth/store/effects/register.effect.ts:36",{"_index":527,"title":{},"body":{"injectables/RegisterEffect.html":{}}}],["src/app/auth/store/effects/register.effect.ts:47",{"_index":518,"title":{},"body":{"injectables/RegisterEffect.html":{}}}],["src/app/auth/store/reducer.ts",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/store/selectors.ts",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/utils/interceptors/auth.interceptor.ts",{"_index":181,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth/utils/interceptors/auth.interceptor.ts:13",{"_index":185,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/utils/interceptors/auth.interceptor.ts:15",{"_index":191,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/counter/components/counter/counter.component.ts",{"_index":327,"title":{},"body":{"components/CounterComponent.html":{},"coverage.html":{}}}],["src/app/counter/components/counter/counter.component.ts:15",{"_index":343,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/components/counter/counter.component.ts:17",{"_index":334,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/components/counter/counter.component.ts:21",{"_index":337,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/components/counter/counter.component.ts:25",{"_index":336,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/components/counter/counter.component.ts:29",{"_index":340,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/components/counter/counter.component.ts:30",{"_index":338,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/components/counter/counter.component.ts:34",{"_index":335,"title":{},"body":{"components/CounterComponent.html":{}}}],["src/app/counter/counter.module.ts",{"_index":359,"title":{},"body":{"modules/CounterModule.html":{}}}],["src/app/counter/models/counter.model.ts",{"_index":364,"title":{},"body":{"interfaces/CounterStateInterface.html":{},"coverage.html":{}}}],["src/app/counter/store/actions/available",{"_index":674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/counter/store/actions/decrement.action.ts",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/counter/store/actions/increment.action.ts",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/counter/store/reducers/counter.reducer.ts",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/counter/store/selectors/counter.selector.ts",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/fakeapi/components/fakeapi/fakeapi.component.ts",{"_index":402,"title":{},"body":{"components/FakeapiComponent.html":{},"coverage.html":{}}}],["src/app/fakeapi/components/fakeapi/fakeapi.component.ts:13",{"_index":409,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["src/app/fakeapi/components/fakeapi/fakeapi.component.ts:14",{"_index":406,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["src/app/fakeapi/components/fakeapi/fakeapi.component.ts:17",{"_index":407,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["src/app/fakeapi/fakeapi.module.ts",{"_index":421,"title":{},"body":{"modules/FakeapiModule.html":{}}}],["src/app/fakeapi/models/fakeapi.interface.ts",{"_index":322,"title":{},"body":{"interfaces/CommentInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"coverage.html":{}}}],["src/app/fakeapi/services/fakeapi.service.ts",{"_index":430,"title":{},"body":{"injectables/FakeapiService.html":{},"coverage.html":{}}}],["src/app/fakeapi/services/fakeapi.service.ts:12",{"_index":434,"title":{},"body":{"injectables/FakeapiService.html":{}}}],["src/app/fakeapi/services/fakeapi.service.ts:9",{"_index":432,"title":{},"body":{"injectables/FakeapiService.html":{}}}],["src/app/fakeapi/store/actions/available",{"_index":675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/fakeapi/store/actions/getcomment.action.ts",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/fakeapi/store/effects/fakeapi.effects.ts",{"_index":374,"title":{},"body":{"injectables/FakeApiEffect.html":{},"coverage.html":{}}}],["src/app/fakeapi/store/effects/fakeapi.effects.ts:15",{"_index":390,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["src/app/fakeapi/store/effects/fakeapi.effects.ts:29",{"_index":379,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["src/app/fakeapi/store/reducers/fakeapi.reducer.ts",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/fakeapi/store/selectors/fakeapi.selector.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/components/main",{"_index":474,"title":{},"body":{"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["src/app/main/main.module.ts",{"_index":483,"title":{},"body":{"modules/MainModule.html":{}}}],["src/app/not",{"_index":485,"title":{},"body":{"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"coverage.html":{}}}],["src/app/shared/backend",{"_index":289,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{},"modules/BackendErrorMessagesModule.html":{},"coverage.html":{}}}],["src/app/shared/services/persistance.service.ts",{"_index":499,"title":{},"body":{"injectables/PersistanceService.html":{},"coverage.html":{}}}],["src/app/shared/services/persistance.service.ts:17",{"_index":503,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["src/app/shared/services/persistance.service.ts:6",{"_index":501,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["src/app/shared/services/persistance.service.ts:9",{"_index":505,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["src/app/shared/topbar/components/topbar/topbar.component.ts",{"_index":579,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/topbar/components/topbar/topbar.component.ts:18",{"_index":589,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/shared/topbar/components/topbar/topbar.component.ts:21",{"_index":587,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/shared/topbar/components/topbar/topbar.component.ts:24",{"_index":585,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/shared/topbar/components/topbar/topbar.component.ts:25",{"_index":583,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/shared/topbar/topbar.module.ts",{"_index":602,"title":{},"body":{"modules/TopbarModule.html":{}}}],["src/environments/environment.development.ts",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/models/appstate.interface.ts",{"_index":169,"title":{},"body":{"interfaces/AppStateInterface.html":{},"coverage.html":{}}}],["src/shared/models/authresponse.interface.ts",{"_index":238,"title":{},"body":{"interfaces/AuthResponseInterface.html":{},"coverage.html":{}}}],["src/shared/models/backenderrors.interface.ts",{"_index":317,"title":{},"body":{"interfaces/BackendErrorsInterface.html":{},"coverage.html":{}}}],["src/shared/models/backenderrors.interface.ts:1",{"_index":320,"title":{},"body":{"interfaces/BackendErrorsInterface.html":{}}}],["src/shared/models/currentuser.interface.ts",{"_index":365,"title":{},"body":{"interfaces/CurrentUserInterface.html":{},"coverage.html":{}}}],["started",{"_index":688,"title":{"index.html":{}},"body":{}}],["state",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.auth",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.counter",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.fakeapi",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.value",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":514,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["store",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["store/actions/decrement.action",{"_index":350,"title":{},"body":{"components/CounterComponent.html":{}}}],["store/actions/getcomment.action",{"_index":411,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["store/actions/increment.action",{"_index":348,"title":{},"body":{"components/CounterComponent.html":{}}}],["store/actions/login.action",{"_index":555,"title":{},"body":{"components/SignInComponent.html":{}}}],["store/actions/register.action",{"_index":551,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["store/effects/fakeapi.effects",{"_index":426,"title":{},"body":{"modules/FakeapiModule.html":{}}}],["store/effects/getuser.effect",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["store/effects/login.effect",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["store/effects/register.effect",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["store/reducer",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["store/reducers/counter.reducer",{"_index":362,"title":{},"body":{"modules/CounterModule.html":{}}}],["store/reducers/fakeapi.reducer",{"_index":424,"title":{},"body":{"modules/FakeapiModule.html":{}}}],["store/selectors",{"_index":554,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["store/selectors/counter.selector",{"_index":346,"title":{},"body":{"components/CounterComponent.html":{}}}],["store/selectors/fakeapi.selector",{"_index":413,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["stored",{"_index":713,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{}}}],["storemodule.forfeature('auth",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature('counter",{"_index":363,"title":{},"body":{"modules/CounterModule.html":{}}}],["storemodule.forfeature('fakeapi",{"_index":428,"title":{},"body":{"modules/FakeapiModule.html":{}}}],["storemodule.forroot",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"interfaces/BackendErrorsInterface.html":{},"interfaces/CommentInterface.html":{},"interfaces/CurrentUserInterface.html":{},"interfaces/FakeApiStateInterface.html":{},"interfaces/LoginRequestInterface.html":{},"injectables/PersistanceService.html":{},"interfaces/RegisterRequestInterface.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["success",{"_index":666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":740,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":741,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":394,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["switchmap(({commentid",{"_index":383,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["switchmap(({request",{"_index":454,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["table",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":395,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["test",{"_index":719,"title":{},"body":{"index.html":{}}}],["testing",{"_index":731,"title":{},"body":{"index.html":{}}}],["tests",{"_index":718,"title":{},"body":{"index.html":{}}}],["this.actions$.pipe",{"_index":381,"title":{},"body":{"injectables/FakeApiEffect.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["this.authservice.getcurrentuser().pipe",{"_index":441,"title":{},"body":{"injectables/GetUserEffect.html":{}}}],["this.authservice.login(request).pipe",{"_index":455,"title":{},"body":{"injectables/LoginEffect.html":{}}}],["this.authservice.register(request).pipe",{"_index":521,"title":{},"body":{"injectables/RegisterEffect.html":{}}}],["this.backenderrors",{"_index":560,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.backenderrorsprop",{"_index":304,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["this.backenderrorsprop[prop",{"_index":308,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["this.backenderrorsprop[prop].join",{"_index":309,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["this.currentcommentid",{"_index":416,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["this.errormessages",{"_index":305,"title":{},"body":{"components/BackendErrorMessagesComponent.html":{}}}],["this.fakeapiservice.getcomment(commentid).pipe",{"_index":384,"title":{},"body":{"injectables/FakeApiEffect.html":{}}}],["this.fb.group",{"_index":563,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form",{"_index":562,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.form.value",{"_index":565,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.http",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get",{"_index":435,"title":{},"body":{"injectables/FakeapiService.html":{}}}],["this.initializeform",{"_index":556,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.initializevalues",{"_index":557,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.issubmitting",{"_index":558,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.persistance.get('accesstoken",{"_index":200,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/GetUserEffect.html":{}}}],["this.persistance.set('accesstoken",{"_index":456,"title":{},"body":{"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["this.router.navigatebyurl",{"_index":463,"title":{},"body":{"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{}}}],["this.store.dispatch(decrementaction",{"_index":352,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.store.dispatch(getcommentaction",{"_index":414,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["this.store.dispatch(getuseraction",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(incrementaction",{"_index":351,"title":{},"body":{"components/CounterComponent.html":{}}}],["this.store.dispatch(loginaction({request",{"_index":566,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.store.dispatch(registeraction",{"_index":578,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.store.pipe",{"_index":341,"title":{},"body":{"components/CounterComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.pipe(select(commentselector",{"_index":408,"title":{},"body":{"components/FakeapiComponent.html":{}}}],["this.store.pipe(select(currentuserselector",{"_index":584,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.pipe(select(issubmittingselector",{"_index":559,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.store.pipe(select(validationerrorsselector",{"_index":561,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["this.value",{"_index":353,"title":{},"body":{"components/CounterComponent.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":199,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/GetUserEffect.html":{}}}],["topbar",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["topbar.component.html",{"_index":580,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":581,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":80,"title":{"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"modules/TopbarModule.html":{},"coverage.html":{},"overview.html":{}}}],["topbarmodule",{"_index":105,"title":{"modules/TopbarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TopbarModule.html":{},"modules.html":{},"overview.html":{}}}],["trace",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["true",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":506,"title":{},"body":{"injectables/PersistanceService.html":{}}}],["tslib",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppStateInterface.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateInterface.html":{},"components/BackendErrorMessagesComponent.html":{},"interfaces/CommentInterface.html":{},"components/CounterComponent.html":{},"interfaces/CounterStateInterface.html":{},"interfaces/CurrentUserInterface.html":{},"injectables/FakeApiEffect.html":{},"interfaces/FakeApiStateInterface.html":{},"components/FakeapiComponent.html":{},"injectables/FakeapiService.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"interfaces/LoginRequestInterface.html":{},"injectables/PersistanceService.html":{},"injectables/RegisterEffect.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":717,"title":{},"body":{"index.html":{}}}],["up",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["up'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["up.component",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["up.component.html",{"_index":569,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":570,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":568,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:21",{"_index":576,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:22",{"_index":577,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:23",{"_index":571,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:31",{"_index":574,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:36",{"_index":573,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:41",{"_index":572,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:49",{"_index":575,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["updatedat",{"_index":371,"title":{},"body":{"interfaces/CurrentUserInterface.html":{}}}],["use",{"_index":709,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":239,"title":{},"body":{"interfaces/AuthResponseInterface.html":{},"injectables/AuthService.html":{},"interfaces/LoginRequestInterface.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/enumerations.html":{}}}],["username",{"_index":372,"title":{},"body":{"interfaces/CurrentUserInterface.html":{},"interfaces/RegisterRequestInterface.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["users",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/login",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationerrors",{"_index":284,"title":{},"body":{"interfaces/AuthStateInterface.html":{},"miscellaneous/variables.html":{}}}],["validationerrorsselector",{"_index":553,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validators",{"_index":550,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.required",{"_index":564,"title":{},"body":{"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"interfaces/CounterStateInterface.html":{},"injectables/FakeApiEffect.html":{},"components/FakeapiComponent.html":{},"injectables/GetUserEffect.html":{},"injectables/LoginEffect.html":{},"injectables/RegisterEffect.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"components/MainLayoutComponent.html":{},"components/NotFoundComponent.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{},"components/TopbarComponent.html":{}}}],["variable",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":749,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":693,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":721,"title":{},"body":{"index.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BackendErrorMessagesComponent.html":{},"components/CounterComponent.html":{},"components/FakeapiComponent.html":{},"injectables/PersistanceService.html":{},"components/SignInComponent.html":{},"components/SignUpComponent.html":{}}}],["works",{"_index":479,"title":{},"body":{"components/MainLayoutComponent.html":{}}}],["xapiurl",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/AuthModule.html":{},"modules/BackendErrorMessagesModule.html":{},"modules/CounterModule.html":{},"modules/FakeapiModule.html":{},"modules/MainModule.html":{},"modules/NotFoundModule.html":{},"modules/TopbarModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'radium'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core'\nimport {Store} from '@ngrx/store'\nimport {AppStateInterface} from '../shared/models/appState.interface'\nimport {getUserAction} from './auth/store/actions/getUser.action'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements OnInit {\n  public title = 'radium'\n\n  constructor(private store: Store) {}\n  public ngOnInit(): void {\n    this.store.dispatch(getUserAction())\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCounterModule\n\nCounterModule\n\nAppModule -->\n\nCounterModule->AppModule\n\n\n\n\n\nFakeapiModule\n\nFakeapiModule\n\nAppModule -->\n\nFakeapiModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nAppModule -->\n\nNotFoundModule->AppModule\n\n\n\n\n\nTopbarModule\n\nTopbarModule\n\nAppModule -->\n\nTopbarModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CounterModule\n                        \n                        \n                            FakeapiModule\n                        \n                        \n                            MainModule\n                        \n                        \n                            NotFoundModule\n                        \n                        \n                            TopbarModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core'\nimport {BrowserModule, provideClientHydration} from '@angular/platform-browser'\n\nimport {AppRoutingModule} from './app-routing.module'\nimport {AppComponent} from './app.component'\nimport {AuthModule} from './auth/auth.module'\nimport {NotFoundModule} from './not-found/not-found.module'\nimport {StoreModule} from '@ngrx/store'\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools'\nimport {environment} from '../environments/environment'\nimport {CounterModule} from './counter/counter.module'\nimport {EffectsModule} from '@ngrx/effects'\nimport {FakeapiModule} from './fakeapi/fakeapi.module'\nimport {TopbarModule} from './shared/topbar/topbar.module'\nimport {MainModule} from './main/main.module'\nimport {HTTP_INTERCEPTORS} from '@angular/common/http'\nimport {AuthInterceptor} from './auth/utils/interceptors/auth.interceptor'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MainModule,\n    TopbarModule,\n    AuthModule,\n    CounterModule,\n    FakeapiModule,\n    NotFoundModule,\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: !environment.production,\n      trace: !environment.production,\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AppComponent } from './app.component'\nimport { MainLayoutComponent } from './main/components/main-layout/main-layout.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainLayoutComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.server.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppStateInterface.html":{"url":"interfaces/AppStateInterface.html","title":"interface - AppStateInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppStateInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/appState.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth\n                                        \n                                \n                                \n                                        \n                                            counter\n                                        \n                                \n                                \n                                        \n                                            fakeApi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth:         AuthStateInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthStateInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        counter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        counter:         CounterStateInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CounterStateInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fakeApi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fakeApi:         FakeApiStateInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FakeApiStateInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AuthStateInterface} from '../../app/auth/models/authState.interface'\nimport {CounterStateInterface} from '../../app/counter/models/counter.model'\nimport {FakeApiStateInterface} from '../../app/fakeapi/models/fakeapi.interface'\n\nexport interface AppStateInterface {\n  auth: AuthStateInterface\n  counter: CounterStateInterface\n  fakeApi: FakeApiStateInterface\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/utils/interceptors/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(persistance: PersistanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/utils/interceptors/auth.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        persistance\n                                                  \n                                                        \n                                                                        PersistanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/utils/interceptors/auth.interceptor.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http'\nimport {Injectable} from '@angular/core'\nimport {Observable} from 'rxjs'\nimport {PersistanceService} from '../../../shared/services/persistance.service'\nimport {environment} from '../../../../environments/environment'\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private persistance: PersistanceService) {}\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    const token = this.persistance.get('accessToken')\n    req = req.clone({\n      setHeaders: {\n        authorization: token ? `Token ${token}` : '',\n        Bearer: token ? `Token ${token}` : '',\n      },\n    })\n\n    return next.handle(req)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nSignInComponent\n\nSignInComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSignInComponent->AuthModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAuthModule -->\n\nSignUpComponent->AuthModule\n\n\n\n\n\nBackendErrorMessagesModule\n\nBackendErrorMessagesModule\n\nAuthModule -->\n\nBackendErrorMessagesModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SignInComponent\n                        \n                        \n                            SignUpComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BackendErrorMessagesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core'\nimport {CommonModule} from '@angular/common'\nimport {RouterModule, Routes} from '@angular/router'\nimport {ReactiveFormsModule} from '@angular/forms'\nimport {StoreModule} from '@ngrx/store'\nimport {reducer} from './store/reducer'\nimport {EffectsModule} from '@ngrx/effects'\nimport {RegisterEffect} from './store/effects/register.effect'\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http'\nimport {BackendErrorMessagesModule} from '../shared/backend-error-messages/backend-error-messages.module'\nimport {SignInComponent} from './components/sign-in/sign-in.component'\nimport {SignUpComponent} from './components/sign-up/sign-up.component'\nimport {LoginEffect} from './store/effects/login.effect'\nimport {GetUserEffect} from './store/effects/getUser.effect'\n\nconst routes: Routes = [\n  {\n    path: 'sign-up',\n    component: SignUpComponent,\n  },\n  {\n    path: 'sign-in',\n    component: SignInComponent,\n  },\n]\n\n@NgModule({\n  declarations: [SignInComponent, SignUpComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature('auth', reducer),\n    EffectsModule.forFeature([RegisterEffect, LoginEffect, GetUserEffect]),\n    BackendErrorMessagesModule,\n  ],\n  providers: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponseInterface.html":{"url":"interfaces/AuthResponseInterface.html","title":"interface - AuthResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/authResponse.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         CurrentUserInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrentUserInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CurrentUserInterface } from './currentUser.interface'\n\nexport interface AuthResponseInterface {\n  user: CurrentUserInterface\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(response: AuthResponseInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            AuthResponseInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CurrentUserInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterRequestInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/services/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterRequestInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core'\nimport {RegisterRequestInterface} from '../models/registerRequest.interface'\nimport {Observable, map} from 'rxjs'\nimport {CurrentUserInterface} from '../../../shared/models/currentUser.interface'\nimport {HttpClient} from '@angular/common/http'\nimport {environment} from '../../../environments/environment'\nimport {AuthResponseInterface} from '../../../shared/models/authResponse.interface'\nimport {LoginRequestInterface} from '../models/loginRequest.interface'\nimport {AuthStateInterface} from '../models/authState.interface'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  public getUser(response: AuthResponseInterface): CurrentUserInterface {\n    return response.user\n  }\n  public register(\n    data: RegisterRequestInterface,\n  ): Observable {\n    console.log('data', data)\n    return this.http\n      .post(environment.apiUrl + '/users', data)\n      .pipe(map(this.getUser))\n  }\n\n  public login(data: LoginRequestInterface): Observable {\n    return this.http\n      .post(environment.apiUrl + '/users/login', data)\n      .pipe(map(this.getUser))\n  }\n\n  public getCurrentUser(): Observable {\n    return this.http\n      .get(environment.apiUrl + '/user')\n      .pipe(map(this.getUser))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthStateInterface.html":{"url":"interfaces/AuthStateInterface.html","title":"interface - AuthStateInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthStateInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/authState.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentUser\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                                \n                                        \n                                            isLoggedIn\n                                        \n                                \n                                \n                                        \n                                            isSubmitting\n                                        \n                                \n                                \n                                        \n                                            validationErrors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentUser:         CurrentUserInterface | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CurrentUserInterface | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoggedIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoggedIn:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSubmitting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSubmitting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationErrors:         BackendErrorsInterface | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendErrorsInterface | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {BackendErrorsInterface} from '../../../shared/models/backendErrors.interface'\nimport {CurrentUserInterface} from '../../../shared/models/currentUser.interface'\n\nexport interface AuthStateInterface {\n  isSubmitting: boolean\n  currentUser: CurrentUserInterface | null\n  isLoggedIn: boolean | null\n  validationErrors: BackendErrorsInterface | null\n  isLoading: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackendErrorMessagesComponent.html":{"url":"components/BackendErrorMessagesComponent.html","title":"component - BackendErrorMessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackendErrorMessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/backend-error-messages/components/backend-error-messages/backend-error-messages.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rd-backend-error-messages\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./backend-error-messages.component.html\n            \n\n\n\n            \n                styleUrl\n                ./backend-error-messages.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backendErrors\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backendErrors\n                    \n                \n                \n                    \n                        Type :         BackendErrorsInterface | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/backend-error-messages/components/backend-error-messages/backend-error-messages.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/backend-error-messages/components/backend-error-messages/backend-error-messages.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/backend-error-messages/components/backend-error-messages/backend-error-messages.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core'\nimport { BackendErrorsInterface } from '../../../../../shared/models/backendErrors.interface'\n\n@Component({\n  selector: 'rd-backend-error-messages',\n  templateUrl: './backend-error-messages.component.html',\n  styleUrl: './backend-error-messages.component.scss',\n})\nexport class BackendErrorMessagesComponent {\n  @Input('backendErrors') backendErrorsProp!: BackendErrorsInterface | null\n\n  public errorMessages: string[] = []\n  public ngOnInit(): void {\n    if (this.backendErrorsProp)\n      this.errorMessages = Object.keys(this.backendErrorsProp).map(\n        (prop: string) => {\n          let messages = ''\n          if (this.backendErrorsProp && this.backendErrorsProp[prop])\n            messages = this.backendErrorsProp[prop].join(', ')\n          return `${prop} ${messages}`\n        },\n      )\n  }\n}\n\n    \n\n    \n        \n  {{ errorMessage }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ errorMessage }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackendErrorMessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendErrorMessagesModule.html":{"url":"modules/BackendErrorMessagesModule.html","title":"module - BackendErrorMessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendErrorMessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendErrorMessagesModule\n\n\n\ncluster_BackendErrorMessagesModule_exports\n\n\n\ncluster_BackendErrorMessagesModule_declarations\n\n\n\n\nBackendErrorMessagesComponent\n\nBackendErrorMessagesComponent\n\n\n\nBackendErrorMessagesModule\n\nBackendErrorMessagesModule\n\nBackendErrorMessagesModule -->\n\nBackendErrorMessagesComponent->BackendErrorMessagesModule\n\n\n\n\n\nBackendErrorMessagesComponent \n\nBackendErrorMessagesComponent \n\nBackendErrorMessagesComponent  -->\n\nBackendErrorMessagesModule->BackendErrorMessagesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/backend-error-messages/backend-error-messages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BackendErrorMessagesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackendErrorMessagesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { BackendErrorMessagesComponent } from './components/backend-error-messages/backend-error-messages.component'\n\n@NgModule({\n  declarations: [BackendErrorMessagesComponent],\n  imports: [CommonModule],\n  exports: [BackendErrorMessagesComponent],\n})\nexport class BackendErrorMessagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendErrorsInterface.html":{"url":"interfaces/BackendErrorsInterface.html","title":"interface - BackendErrorsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendErrorsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/backendErrors.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string[]\n\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/backendErrors.interface.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface BackendErrorsInterface {\n  [key: string]: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommentInterface.html":{"url":"interfaces/CommentInterface.html","title":"interface - CommentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fakeapi/models/fakeapi.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FakeApiStateInterface {\n  currentCommentId: number | null\n  currentComment: CommentInterface | null\n}\n\nexport interface CommentInterface {\n  name: string\n  body: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CounterComponent.html":{"url":"components/CounterComponent.html","title":"component - CounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/counter/components/counter/counter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-counter\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./counter.component.html\n            \n\n\n\n            \n                styleUrl\n                ./counter.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                value$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decrement\n                            \n                            \n                                    Public\n                                dispatchDecrement\n                            \n                            \n                                    Public\n                                dispatchIncrement\n                            \n                            \n                                    Public\n                                increment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/counter/components/counter/counter.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        decrement\n                        \n                    \n                \n            \n            \n                \n                        \n                    decrement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/counter/components/counter/counter.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dispatchDecrement\n                        \n                    \n                \n            \n            \n                \n                        \n                    dispatchDecrement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/counter/components/counter/counter.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dispatchIncrement\n                        \n                    \n                \n            \n            \n                \n                        \n                    dispatchIncrement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/counter/components/counter/counter.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        increment\n                        \n                    \n                \n            \n            \n                \n                        \n                    increment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/counter/components/counter/counter.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/counter/components/counter/counter.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.pipe(\n    select(counterValueSelector),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/counter/components/counter/counter.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { Store, select } from '@ngrx/store'\nimport { counterValueSelector } from '../../store/selectors/counter.selector'\nimport { incrementAction } from '../../store/actions/increment.action'\nimport { decrementAction } from '../../store/actions/decrement.action'\nimport { AppStateInterface } from '../../../../shared/models/appState.interface'\nimport { Observable } from 'rxjs'\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrl: './counter.component.scss',\n})\nexport class CounterComponent {\n  public value$: Observable = this.store.pipe(\n    select(counterValueSelector),\n  )\n\n  constructor(private store: Store) { }\n\n  public dispatchIncrement() {\n    this.store.dispatch(incrementAction())\n  }\n\n  public dispatchDecrement() {\n    this.store.dispatch(decrementAction())\n  }\n\n  public value = 0\n  public increment() {\n    this.value++\n  }\n\n  public decrement() {\n    this.value--\n  }\n}\n\n    \n\n    \n        NgRx Counter\n\n\n  -\n  {{ value$ | async }}\n  +\n\n\n\n\nSimple Counter\n\n  -\n  {{ value }}\n  +\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'NgRx Counter  -  {{ value$ | async }}  +Simple Counter  -  {{ value }}  +'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CounterModule.html":{"url":"modules/CounterModule.html","title":"module - CounterModule","body":"\n                   \n\n\n\n\n    Modules\n    CounterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CounterModule\n\n\n\ncluster_CounterModule_declarations\n\n\n\n\nCounterComponent\n\nCounterComponent\n\n\n\nCounterModule\n\nCounterModule\n\nCounterModule -->\n\nCounterComponent->CounterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/counter/counter.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CounterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { CounterComponent } from './components/counter/counter.component'\nimport { RouterModule, Routes } from '@angular/router'\nimport { StoreModule } from '@ngrx/store'\nimport { counterReducer } from './store/reducers/counter.reducer'\n\nconst routes: Routes = [{ path: 'counter', component: CounterComponent }]\n@NgModule({\n  declarations: [CounterComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature('counter', counterReducer),\n  ],\n})\nexport class CounterModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CounterStateInterface.html":{"url":"interfaces/CounterStateInterface.html","title":"interface - CounterStateInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CounterStateInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/counter/models/counter.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CounterStateInterface {\n  value: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentUserInterface.html":{"url":"interfaces/CurrentUserInterface.html","title":"interface - CurrentUserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurrentUserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/currentUser.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CurrentUserInterface {\n  id: number;\n  email: string;\n  createdAt: string;\n  updatedAt: string;\n  username: string;\n  bio: string | null;\n  image: string | null;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FakeApiEffect.html":{"url":"injectables/FakeApiEffect.html","title":"injectable - FakeApiEffect","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FakeApiEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fakeapi/store/effects/fakeApi.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getCommentEffect$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, fakeApiService: FakeapiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/fakeapi/store/effects/fakeApi.effects.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fakeApiService\n                                                  \n                                                        \n                                                                        FakeapiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentEffect$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(getCommentAction),\n      switchMap(({commentId}) => {\n        return this.fakeApiService.getComment(commentId).pipe(\n          map((comment: CommentInterface) => {\n            return getCommentSuccessAction({comment})\n          }),\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(getCommentFailureAction())\n          }),\n        )\n      }),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/fakeapi/store/effects/fakeApi.effects.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Actions, createEffect, ofType} from '@ngrx/effects'\nimport {FakeapiService} from '../../services/fakeapi.service'\nimport {catchError, map, of, switchMap, tap} from 'rxjs'\nimport {\n  getCommentAction,\n  getCommentFailureAction,\n  getCommentSuccessAction,\n} from '../actions/getComment.action'\nimport {HttpErrorResponse} from '@angular/common/http'\nimport {Injectable} from '@angular/core'\nimport {CommentInterface} from '../../models/fakeapi.interface'\n\n@Injectable()\nexport class FakeApiEffect {\n  getCommentEffect$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getCommentAction),\n      switchMap(({commentId}) => {\n        return this.fakeApiService.getComment(commentId).pipe(\n          map((comment: CommentInterface) => {\n            return getCommentSuccessAction({comment})\n          }),\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(getCommentFailureAction())\n          }),\n        )\n      }),\n    ),\n  )\n\n  constructor(\n    private actions$: Actions,\n    private fakeApiService: FakeapiService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FakeApiStateInterface.html":{"url":"interfaces/FakeApiStateInterface.html","title":"interface - FakeApiStateInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FakeApiStateInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fakeapi/models/fakeapi.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentComment\n                                        \n                                \n                                \n                                        \n                                            currentCommentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentComment:         CommentInterface | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommentInterface | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentCommentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentCommentId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FakeApiStateInterface {\n  currentCommentId: number | null\n  currentComment: CommentInterface | null\n}\n\nexport interface CommentInterface {\n  name: string\n  body: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FakeapiComponent.html":{"url":"components/FakeapiComponent.html","title":"component - FakeapiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FakeapiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/fakeapi/components/fakeapi/fakeapi.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rd-fakeapi\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./fakeapi.component.html\n            \n\n\n\n            \n                styleUrl\n                ./fakeapi.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentComment$\n                            \n                            \n                                    Public\n                                currentCommentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/fakeapi/components/fakeapi/fakeapi.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentComment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fakeapi/components/fakeapi/fakeapi.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentComment$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.pipe(select(commentSelector))\n                    \n                \n                    \n                        \n                                Defined in src/app/fakeapi/components/fakeapi/fakeapi.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentCommentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/fakeapi/components/fakeapi/fakeapi.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { AppStateInterface } from '../../../../shared/models/appState.interface'\nimport { Store, select } from '@ngrx/store'\nimport { getCommentAction } from '../../store/actions/getComment.action'\nimport { commentSelector } from '../../store/selectors/fakeapi.selector'\n\n@Component({\n  selector: 'rd-fakeapi',\n  templateUrl: './fakeapi.component.html',\n  styleUrl: './fakeapi.component.scss',\n})\nexport class FakeapiComponent {\n  public currentComment$ = this.store.pipe(select(commentSelector))\n  public currentCommentId: number = 1\n  constructor(private store: Store) { }\n\n  public getCurrentComment(): void {\n    this.store.dispatch(getCommentAction({ commentId: this.currentCommentId }))\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Get comment\n    \n    \n  \n  \n    {{ currentComment$ | async | json }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Get comment                {{ currentComment$ | async | json }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FakeapiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FakeapiModule.html":{"url":"modules/FakeapiModule.html","title":"module - FakeapiModule","body":"\n                   \n\n\n\n\n    Modules\n    FakeapiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FakeapiModule\n\n\n\ncluster_FakeapiModule_declarations\n\n\n\n\nFakeapiComponent\n\nFakeapiComponent\n\n\n\nFakeapiModule\n\nFakeapiModule\n\nFakeapiModule -->\n\nFakeapiComponent->FakeapiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/fakeapi/fakeapi.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FakeapiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FakeapiComponent } from './components/fakeapi/fakeapi.component'\nimport { RouterModule } from '@angular/router'\nimport { StoreModule } from '@ngrx/store'\nimport { fakeApiReducer } from './store/reducers/fakeapi.reducer'\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { EffectsModule } from '@ngrx/effects'\nimport { FakeApiEffect } from './store/effects/fakeApi.effects'\n\n@NgModule({\n  declarations: [FakeapiComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forChild([\n      {\n        path: 'fakeapi',\n        component: FakeapiComponent,\n      },\n    ]),\n    StoreModule.forFeature('fakeApi', fakeApiReducer),\n    EffectsModule.forFeature([FakeApiEffect]),\n  ],\n})\nexport class FakeapiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FakeapiService.html":{"url":"injectables/FakeapiService.html","title":"injectable - FakeapiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FakeapiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fakeapi/services/fakeapi.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/fakeapi/services/fakeapi.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getComment\n                        \n                    \n                \n            \n            \n                \n                        \n                    getComment(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fakeapi/services/fakeapi.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { CommentInterface } from '../models/fakeapi.interface'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FakeapiService {\n  constructor(private http: HttpClient) { }\n\n  public getComment(id: number): Observable {\n    return this.http.get(\n      `https://jsonplaceholder.typicode.com/comments/${id}`,\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetUserEffect.html":{"url":"injectables/GetUserEffect.html","title":"injectable - GetUserEffect","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetUserEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/store/effects/getUser.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getUser$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, persistance: PersistanceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/store/effects/getUser.effect.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        persistance\n                                                  \n                                                        \n                                                                        PersistanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(getUserAction),\n      switchMap(() => {\n        const token = this.persistance.get('accessToken')\n        if (!token) return of(getUserFailureAction())\n\n        return this.authService.getCurrentUser().pipe(\n          map((currentUser: CurrentUserInterface) => {\n            return getUserSuccessAction({currentUser})\n          }),\n          catchError(() => {\n            return of(getUserFailureAction())\n          }),\n        )\n      }),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/store/effects/getUser.effect.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core'\nimport {Actions, createEffect, ofType} from '@ngrx/effects'\nimport {catchError, map, of, switchMap, tap} from 'rxjs'\nimport {AuthService} from '../../services/auth.service'\nimport {PersistanceService} from '../../../shared/services/persistance.service'\nimport {CurrentUserInterface} from '../../../../shared/models/currentUser.interface'\nimport {\n  getUserAction,\n  getUserFailureAction,\n  getUserSuccessAction,\n} from '../actions/getUser.action'\n\n@Injectable()\nexport class GetUserEffect {\n  getUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getUserAction),\n      switchMap(() => {\n        const token = this.persistance.get('accessToken')\n        if (!token) return of(getUserFailureAction())\n\n        return this.authService.getCurrentUser().pipe(\n          map((currentUser: CurrentUserInterface) => {\n            return getUserSuccessAction({currentUser})\n          }),\n          catchError(() => {\n            return of(getUserFailureAction())\n          }),\n        )\n      }),\n    ),\n  )\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private persistance: PersistanceService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginEffect.html":{"url":"injectables/LoginEffect.html","title":"injectable - LoginEffect","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/store/effects/login.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login$\n                            \n                            \n                                reidrectAfterSuccess$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, persistance: PersistanceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/store/effects/login.effect.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        persistance\n                                                  \n                                                        \n                                                                        PersistanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loginAction),\n      switchMap(({request}) => {\n        return this.authService.login(request).pipe(\n          map((currentUser: CurrentUserInterface) => {\n            this.persistance.set('accessToken', currentUser.token)\n            return loginSuccessAction({currentUser})\n          }),\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(loginFailureAction({errors: errorResponse.error.errors}))\n          }),\n        )\n      }),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/store/effects/login.effect.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reidrectAfterSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(loginSuccessAction),\n        tap(() => {\n          this.router.navigateByUrl('/')\n        }),\n      ),\n    {\n      dispatch: false,\n    },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/store/effects/login.effect.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core'\nimport {Actions, createEffect, ofType} from '@ngrx/effects'\nimport {\n  loginAction,\n  loginFailureAction,\n  loginSuccessAction,\n} from '../actions/login.action'\nimport {catchError, map, of, switchMap, tap} from 'rxjs'\nimport {AuthService} from '../../services/auth.service'\nimport {PersistanceService} from '../../../shared/services/persistance.service'\nimport {Router} from '@angular/router'\nimport {CurrentUserInterface} from '../../../../shared/models/currentUser.interface'\nimport {HttpErrorResponse} from '@angular/common/http'\n\n@Injectable()\nexport class LoginEffect {\n  login$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loginAction),\n      switchMap(({request}) => {\n        return this.authService.login(request).pipe(\n          map((currentUser: CurrentUserInterface) => {\n            this.persistance.set('accessToken', currentUser.token)\n            return loginSuccessAction({currentUser})\n          }),\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(loginFailureAction({errors: errorResponse.error.errors}))\n          }),\n        )\n      }),\n    ),\n  )\n\n  reidrectAfterSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(loginSuccessAction),\n        tap(() => {\n          this.router.navigateByUrl('/')\n        }),\n      ),\n    {\n      dispatch: false,\n    },\n  )\n\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private persistance: PersistanceService,\n    private router: Router,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginRequestInterface.html":{"url":"interfaces/LoginRequestInterface.html","title":"interface - LoginRequestInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginRequestInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/loginRequest.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginRequestInterface {\n  user: {\n    email: string\n    password: string\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainLayoutComponent.html":{"url":"components/MainLayoutComponent.html","title":"component - MainLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/components/main-layout/main-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rd-main-layout\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./main-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'rd-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrl: './main-layout.component.scss'\n})\nexport class MainLayoutComponent {\n\n}\n\n    \n\n    \n        main-layout works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'main-layout works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_exports\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainLayoutComponent->MainModule\n\n\n\n\n\nMainLayoutComponent \n\nMainLayoutComponent \n\nMainLayoutComponent  -->\n\nMainModule->MainLayoutComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/main/main.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainLayoutComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainLayoutComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { MainLayoutComponent } from './components/main-layout/main-layout.component'\n\n@NgModule({\n  declarations: [MainLayoutComponent],\n  imports: [CommonModule],\n  exports: [MainLayoutComponent],\n})\nexport class MainModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  404\n  Page not found\n  Home page\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404  Page not found  Home page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotFoundModule.html":{"url":"modules/NotFoundModule.html","title":"module - NotFoundModule","body":"\n                   \n\n\n\n\n    Modules\n    NotFoundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/not-found/not-found.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NotFoundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  declarations: [NotFoundComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class NotFoundModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersistanceService.html":{"url":"injectables/PersistanceService.html","title":"injectable - PersistanceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersistanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/persistance.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/persistance.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/persistance.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/services/persistance.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersistanceService {\n  constructor() {}\n\n  set(key: string, data: any): void {\n    try {\n      localStorage.setItem(key, JSON.stringify(data))\n    } catch (e) {\n      console.error('Error while saving data to local storage', e)\n    }\n  }\n\n  get(key: string): any {\n    try {\n      return JSON.parse(localStorage.getItem(key) || '')\n    } catch (e) {\n      console.error('Error while getting data', e)\n      return null\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterEffect.html":{"url":"injectables/RegisterEffect.html","title":"injectable - RegisterEffect","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegisterEffect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/store/effects/register.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                register$\n                            \n                            \n                                reidrectAfterSuccess$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, persistance: PersistanceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/store/effects/register.effect.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        persistance\n                                                  \n                                                        \n                                                                        PersistanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        register$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerAction),\n      switchMap(({ request }) => {\n        return this.authService.register(request).pipe(\n          map((currentUser: CurrentUserInterface) => {\n            this.persistance.set('accessToken', currentUser.token)\n            return registerSuccessAction({ currentUser })\n          }),\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(\n              registerFailureAction({ errors: errorResponse.error.errors }),\n            )\n          }),\n        )\n      }),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/store/effects/register.effect.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reidrectAfterSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(registerSuccessAction),\n        tap(() => {\n          this.router.navigateByUrl('/')\n        }),\n      ),\n    {\n      dispatch: false,\n    },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/store/effects/register.effect.ts:36\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { AuthService } from '../../services/auth.service'\nimport {\n  registerAction,\n  registerFailureAction,\n  registerSuccessAction,\n} from '../actions/register.action'\nimport { catchError, map, of, switchMap, tap } from 'rxjs'\nimport { CurrentUserInterface } from '../../../../shared/models/currentUser.interface'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { PersistanceService } from '../../../shared/services/persistance.service'\nimport { Router } from '@angular/router'\n\n@Injectable()\nexport class RegisterEffect {\n  register$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerAction),\n      switchMap(({ request }) => {\n        return this.authService.register(request).pipe(\n          map((currentUser: CurrentUserInterface) => {\n            this.persistance.set('accessToken', currentUser.token)\n            return registerSuccessAction({ currentUser })\n          }),\n          catchError((errorResponse: HttpErrorResponse) => {\n            return of(\n              registerFailureAction({ errors: errorResponse.error.errors }),\n            )\n          }),\n        )\n      }),\n    ),\n  )\n\n  reidrectAfterSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(registerSuccessAction),\n        tap(() => {\n          this.router.navigateByUrl('/')\n        }),\n      ),\n    {\n      dispatch: false,\n    },\n  )\n\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private persistance: PersistanceService,\n    private router: Router,\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestInterface.html":{"url":"interfaces/RegisterRequestInterface.html","title":"interface - RegisterRequestInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/models/registerRequest.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestInterface {\n  user: {\n    email: string\n    password: string\n    username: string\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/sign-in/sign-in.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rd-sign-in\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backendErrors$\n                            \n                            \n                                form\n                            \n                            \n                                isSubmitting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeForm\n                            \n                            \n                                    Public\n                                initializeValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/sign-in/sign-in.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/sign-in/sign-in.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initializeValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/sign-in/sign-in.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/sign-in/sign-in.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/sign-in/sign-in.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backendErrors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/sign-in/sign-in.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/sign-in/sign-in.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitting$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/sign-in/sign-in.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core'\nimport {Observable} from 'rxjs'\nimport {BackendErrorsInterface} from '../../../../shared/models/backendErrors.interface'\nimport {AppStateInterface} from '../../../../shared/models/appState.interface'\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms'\nimport {Store, select} from '@ngrx/store'\nimport {AuthService} from '../../services/auth.service'\nimport {RegisterRequestInterface} from '../../models/registerRequest.interface'\nimport {registerAction} from '../../store/actions/register.action'\nimport {\n  isSubmittingSelector,\n  validationErrorsSelector,\n} from '../../store/selectors'\nimport {loginAction} from '../../store/actions/login.action'\n\n@Component({\n  selector: 'rd-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss',\n})\nexport class SignInComponent {\n  form!: FormGroup\n  isSubmitting$!: Observable\n  backendErrors$!: Observable\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    private authService: AuthService,\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm()\n    this.initializeValues()\n  }\n\n  public initializeValues(): void {\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\n  }\n\n  initializeForm(): void {\n    this.form = this.fb.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    })\n  }\n\n  onSubmit(): void {\n    const request: RegisterRequestInterface = {\n      user: this.form.value,\n    }\n\n    this.store.dispatch(loginAction({request}))\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Sign In\n        \n          No account? Sign up!\n        \n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Sign in\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Sign In                  No account? Sign up!                                                                                                                                        Sign in                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/components/sign-up/sign-up.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rd-sign-up\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backendErrors$\n                            \n                            \n                                form\n                            \n                            \n                                isSubmitting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeForm\n                            \n                            \n                                    Public\n                                initializeValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/components/sign-up/sign-up.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeForm\n                        \n                    \n                \n            \n            \n                \ninitializeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/sign-up/sign-up.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initializeValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/sign-up/sign-up.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/sign-up/sign-up.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/components/sign-up/sign-up.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backendErrors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/sign-up/sign-up.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/sign-up/sign-up.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitting$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/components/sign-up/sign-up.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { Store, select } from '@ngrx/store'\nimport { registerAction } from '../../store/actions/register.action'\nimport { Observable } from 'rxjs'\nimport { AppStateInterface } from '../../../../shared/models/appState.interface'\nimport {\n  isSubmittingSelector,\n  validationErrorsSelector,\n} from '../../store/selectors'\nimport { AuthService } from '../../services/auth.service'\nimport { RegisterRequestInterface } from '../../models/registerRequest.interface'\nimport { BackendErrorsInterface } from '../../../../shared/models/backendErrors.interface'\n\n@Component({\n  selector: 'rd-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrl: './sign-up.component.scss',\n})\nexport class SignUpComponent {\n  form!: FormGroup\n  isSubmitting$!: Observable\n  backendErrors$!: Observable\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n    private authService: AuthService,\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeForm()\n    this.initializeValues()\n  }\n\n  public initializeValues(): void {\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector))\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\n  }\n\n  initializeForm(): void {\n    this.form = this.fb.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    })\n  }\n\n  onSubmit(): void {\n    const request: RegisterRequestInterface = {\n      user: this.form.value,\n    }\n\n    this.store.dispatch(registerAction({ request }))\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Sign Up\n        \n          Have an account?\n        \n        \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              \n            \n            \n              Sign up\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Sign Up                  Have an account?                                                                                                                                                                              Sign up                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/topbar/components/topbar/topbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rd-topbar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./topbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Public\n                                isAnonymous$\n                            \n                            \n                                    Public\n                                isLoggedIn$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/topbar/components/topbar/topbar.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.pipe(select(currentUserSelector))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/topbar/components/topbar/topbar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAnonymous$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.pipe(\n    select(isAnonymousInSelector),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/topbar/components/topbar/topbar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.pipe(\n    select(isLoggedInSelector),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/topbar/components/topbar/topbar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core'\nimport { Store, select } from '@ngrx/store'\nimport {\n  currentUserSelector,\n  isAnonymousInSelector,\n  isLoggedInSelector,\n} from '../../../../auth/store/selectors'\nimport { Observable } from 'rxjs'\nimport { AppStateInterface } from '../../../../../shared/models/appState.interface'\nimport { CurrentUserInterface } from '../../../../../shared/models/currentUser.interface'\n\n@Component({\n  selector: 'rd-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrl: './topbar.component.scss',\n})\nexport class TopbarComponent {\n  public isLoggedIn$: Observable = this.store.pipe(\n    select(isLoggedInSelector),\n  )\n  public isAnonymous$: Observable = this.store.pipe(\n    select(isAnonymousInSelector),\n  )\n  public currentUser$: Observable =\n    this.store.pipe(select(currentUserSelector))\n\n  constructor(private store: Store) { }\n}\n\n    \n\n    \n        \n  \n    Radium\n    \n      \n        Home\n      \n      \n        \n          \n            \n            &ngsp; New Post\n          \n        \n\n        \n          \n            \n            &ngsp; Settings\n          \n        \n\n        \n          \n            \n            &ngsp; {{ (currentUser$ | async)?.username }}\n          \n        \n      \n      \n        \n           Sign in \n        \n\n        \n           Sign up \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Radium                  Home                                                      &ngsp; New Post                                                            &ngsp; Settings                                                            &ngsp; {{ (currentUser$ | async)?.username }}                                                 Sign in                            Sign up                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackendErrorMessagesComponent', 'selector': 'rd-backend-error-messages'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FakeapiComponent', 'selector': 'rd-fakeapi'},{'name': 'MainLayoutComponent', 'selector': 'rd-main-layout'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'SignInComponent', 'selector': 'rd-sign-in'},{'name': 'SignUpComponent', 'selector': 'rd-sign-up'},{'name': 'TopbarComponent', 'selector': 'rd-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TopbarModule.html":{"url":"modules/TopbarModule.html","title":"module - TopbarModule","body":"\n                   \n\n\n\n\n    Modules\n    TopbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TopbarModule\n\n\n\ncluster_TopbarModule_exports\n\n\n\ncluster_TopbarModule_declarations\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\n\n\nTopbarModule\n\nTopbarModule\n\nTopbarModule -->\n\nTopbarComponent->TopbarModule\n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nTopbarModule->TopbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/topbar/topbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TopbarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TopbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TopbarComponent } from './components/topbar/topbar.component'\nimport { RouterModule } from '@angular/router'\n\n@NgModule({\n  declarations: [TopbarComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [TopbarComponent],\n})\nexport class TopbarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/components/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/components/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/models/authState.interface.ts\n            \n            interface\n            AuthStateInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/models/loginRequest.interface.ts\n            \n            interface\n            LoginRequestInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/models/registerRequest.interface.ts\n            \n            interface\n            RegisterRequestInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/getUser.action.ts\n            \n            variable\n            getUserAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/getUser.action.ts\n            \n            variable\n            getUserFailureAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/getUser.action.ts\n            \n            variable\n            getUserSuccessAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/login.action.ts\n            \n            variable\n            loginAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/login.action.ts\n            \n            variable\n            loginFailureAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/login.action.ts\n            \n            variable\n            loginSuccessAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/register.action.ts\n            \n            variable\n            registerAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/register.action.ts\n            \n            variable\n            registerFailureAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/actions/register.action.ts\n            \n            variable\n            registerSuccessAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/effects/getUser.effect.ts\n            \n            injectable\n            GetUserEffect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/store/effects/login.effect.ts\n            \n            injectable\n            LoginEffect\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/store/effects/register.effect.ts\n            \n            injectable\n            RegisterEffect\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/store/reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/reducer.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/selectors.ts\n            \n            variable\n            authFeatureSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/selectors.ts\n            \n            variable\n            currentUserSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/selectors.ts\n            \n            variable\n            isAnonymousInSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/selectors.ts\n            \n            variable\n            isLoggedInSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/selectors.ts\n            \n            variable\n            isSubmittingSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/store/selectors.ts\n            \n            variable\n            validationErrorsSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/utils/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/counter/components/counter/counter.component.ts\n            \n            component\n            CounterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/counter/models/counter.model.ts\n            \n            interface\n            CounterStateInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/counter/store/actions/decrement.action.ts\n            \n            variable\n            decrementAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter/store/actions/increment.action.ts\n            \n            variable\n            incrementAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter/store/reducers/counter.reducer.ts\n            \n            function\n            counterReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter/store/reducers/counter.reducer.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter/store/reducers/counter.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter/store/selectors/counter.selector.ts\n            \n            variable\n            counterFeatureSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/counter/store/selectors/counter.selector.ts\n            \n            variable\n            counterValueSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/components/fakeapi/fakeapi.component.ts\n            \n            component\n            FakeapiComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/fakeapi/models/fakeapi.interface.ts\n            \n            interface\n            CommentInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/fakeapi/models/fakeapi.interface.ts\n            \n            interface\n            FakeApiStateInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/fakeapi/services/fakeapi.service.ts\n            \n            injectable\n            FakeapiService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/actions/getComment.action.ts\n            \n            variable\n            getCommentAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/actions/getComment.action.ts\n            \n            variable\n            getCommentFailureAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/actions/getComment.action.ts\n            \n            variable\n            getCommentSuccessAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/effects/fakeApi.effects.ts\n            \n            injectable\n            FakeApiEffect\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/reducers/fakeapi.reducer.ts\n            \n            function\n            fakeApiReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/reducers/fakeapi.reducer.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/reducers/fakeapi.reducer.ts\n            \n            variable\n            fakeApi\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/reducers/fakeapi.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/selectors/fakeapi.selector.ts\n            \n            variable\n            commentSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/fakeapi/store/selectors/fakeapi.selector.ts\n            \n            variable\n            fakeApiFeatureSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/components/main-layout/main-layout.component.ts\n            \n            component\n            MainLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/not-found/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/backend-error-messages/components/backend-error-messages/backend-error-messages.component.ts\n            \n            component\n            BackendErrorMessagesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/persistance.service.ts\n            \n            injectable\n            PersistanceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/topbar/components/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/models/appState.interface.ts\n            \n            interface\n            AppStateInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/authResponse.interface.ts\n            \n            interface\n            AuthResponseInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/models/backendErrors.interface.ts\n            \n            interface\n            BackendErrorsInterface\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/models/currentUser.interface.ts\n            \n            interface\n            CurrentUserInterface\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.0\n        \n            @angular/common : ^17.0.0\n        \n            @angular/compiler : ^17.0.0\n        \n            @angular/core : ^17.0.0\n        \n            @angular/forms : ^17.0.0\n        \n            @angular/platform-browser : ^17.0.0\n        \n            @angular/platform-browser-dynamic : ^17.0.0\n        \n            @angular/platform-server : ^17.0.0\n        \n            @angular/router : ^17.0.0\n        \n            @angular/ssr : ^17.0.7\n        \n            @ngrx/effects : ^17.2.0\n        \n            @ngrx/store : ^17.0.1\n        \n            @ngrx/store-devtools : ^17.0.1\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionTypes   (src/.../actionTypes.ts)\n                        \n                        \n                            CounterAction   (src/.../available-actions.enum.ts)\n                        \n                        \n                            FakeApiActionEnum   (src/.../available-actions.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/store/actionTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionTypes\n                    \n                \n                        \n                            \n                                 REGISTER\n                            \n                        \n                        \n                            \n                                Value : [Auth] Register\n                            \n                        \n                        \n                            \n                                 REGISTER_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [Auth] Register success\n                            \n                        \n                        \n                            \n                                 REGISTER_FAILURE\n                            \n                        \n                        \n                            \n                                Value : [Auth] Register failure\n                            \n                        \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                Value : [Auth] Login\n                            \n                        \n                        \n                            \n                                 LOGIN_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [Auth] Login success\n                            \n                        \n                        \n                            \n                                 LOGIN_FAILURE\n                            \n                        \n                        \n                            \n                                Value : [Auth] Login failure\n                            \n                        \n                        \n                            \n                                 GET_CURRENT_USER\n                            \n                        \n                        \n                            \n                                Value : [Auth] Get user\n                            \n                        \n                        \n                            \n                                 GET_CURRENT_USER_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [Auth] Get user success\n                            \n                        \n                        \n                            \n                                 GET_CURRENT_USER_FAILURE\n                            \n                        \n                        \n                            \n                                Value : [Auth] Get user failure\n                            \n                        \n            \n        \n\n    src/app/counter/store/actions/available-actions.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CounterAction\n                    \n                \n                        \n                            \n                                 INCREMENT\n                            \n                        \n                        \n                            \n                                Value : [Counter] Increment\n                            \n                        \n                        \n                            \n                                 DECREMENT\n                            \n                        \n                        \n                            \n                                Value : [Counter] Decrement\n                            \n                        \n            \n        \n\n    src/app/fakeapi/store/actions/available-actions.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FakeApiActionEnum\n                    \n                \n                        \n                            \n                                 GET_COMMENT\n                            \n                        \n                        \n                            \n                                Value : [FakeApi] Get comment\n                            \n                        \n                        \n                            \n                                 GET_COMMENT_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [FakeApi] Get comment success\n                            \n                        \n                        \n                            \n                                 GET_COMMENT_FAILURE\n                            \n                        \n                        \n                            \n                                Value : [FakeApi] Get comment failure\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            counterReducer   (src/.../counter.reducer.ts)\n                        \n                        \n                            fakeApiReducer   (src/.../fakeapi.reducer.ts)\n                        \n                        \n                            getNumber   (src/.../fakeapi.reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/counter/store/reducers/counter.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        counterReducer\n                        \n                    \n                \n            \n            \n                \ncounterReducer(state: CounterStateInterface, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            CounterStateInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                        Action\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/fakeapi/store/reducers/fakeapi.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fakeApiReducer\n                        \n                    \n                \n            \n            \n                \nfakeApiReducer(state: FakeApiStateInterface, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FakeApiStateInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                        Action\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumber\n                        \n                    \n                \n            \n            \n                \ngetNumber()\n                \n            \n\n\n\n\n        \n    \n    src/app/auth/store/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state: AuthStateInterface, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AuthStateInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                        Action\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRadium\nThis project was generated with Angular CLI version 17.0.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendErrorMessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CounterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FakeapiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotFoundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TopbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_BackendErrorMessagesModule\n\n\n\ncluster_BackendErrorMessagesModule_declarations\n\n\n\ncluster_BackendErrorMessagesModule_exports\n\n\n\ncluster_CounterModule\n\n\n\ncluster_CounterModule_declarations\n\n\n\ncluster_FakeapiModule\n\n\n\ncluster_FakeapiModule_declarations\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_exports\n\n\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\ncluster_TopbarModule\n\n\n\ncluster_TopbarModule_declarations\n\n\n\ncluster_TopbarModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCounterModule\n\nCounterModule\n\nAppModule -->\n\nCounterModule->AppModule\n\n\n\n\n\nFakeapiModule\n\nFakeapiModule\n\nAppModule -->\n\nFakeapiModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nMainLayoutComponent \n\nMainLayoutComponent \n\nMainLayoutComponent  -->\n\nMainModule->MainLayoutComponent \n\n\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nAppModule -->\n\nNotFoundModule->AppModule\n\n\n\n\n\nTopbarModule\n\nTopbarModule\n\nAppModule -->\n\nTopbarModule->AppModule\n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nTopbarModule->TopbarComponent \n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nSignInComponent\n\nSignInComponent\n\nAuthModule -->\n\nSignInComponent->AuthModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAuthModule -->\n\nSignUpComponent->AuthModule\n\n\n\n\n\nBackendErrorMessagesModule\n\nBackendErrorMessagesModule\n\nAuthModule -->\n\nBackendErrorMessagesModule->AuthModule\n\n\n\n\n\nBackendErrorMessagesComponent \n\nBackendErrorMessagesComponent \n\nBackendErrorMessagesComponent  -->\n\nBackendErrorMessagesModule->BackendErrorMessagesComponent \n\n\n\n\n\nBackendErrorMessagesComponent\n\nBackendErrorMessagesComponent\n\nBackendErrorMessagesModule -->\n\nBackendErrorMessagesComponent->BackendErrorMessagesModule\n\n\n\n\n\nCounterComponent\n\nCounterComponent\n\nCounterModule -->\n\nCounterComponent->CounterModule\n\n\n\n\n\nFakeapiComponent\n\nFakeapiComponent\n\nFakeapiModule -->\n\nFakeapiComponent->FakeapiModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nMainModule -->\n\nMainLayoutComponent->MainModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nTopbarModule -->\n\nTopbarComponent->TopbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authFeatureSelector   (src/.../selectors.ts)\n                        \n                        \n                            authReducer   (src/.../reducer.ts)\n                        \n                        \n                            authReducer   (src/.../counter.reducer.ts)\n                        \n                        \n                            commentSelector   (src/.../fakeapi.selector.ts)\n                        \n                        \n                            counterFeatureSelector   (src/.../counter.selector.ts)\n                        \n                        \n                            counterValueSelector   (src/.../counter.selector.ts)\n                        \n                        \n                            currentUserSelector   (src/.../selectors.ts)\n                        \n                        \n                            decrementAction   (src/.../decrement.action.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            fakeApi   (src/.../fakeapi.reducer.ts)\n                        \n                        \n                            fakeApiFeatureSelector   (src/.../fakeapi.selector.ts)\n                        \n                        \n                            getCommentAction   (src/.../getComment.action.ts)\n                        \n                        \n                            getCommentFailureAction   (src/.../getComment.action.ts)\n                        \n                        \n                            getCommentSuccessAction   (src/.../getComment.action.ts)\n                        \n                        \n                            getUserAction   (src/.../getUser.action.ts)\n                        \n                        \n                            getUserFailureAction   (src/.../getUser.action.ts)\n                        \n                        \n                            getUserSuccessAction   (src/.../getUser.action.ts)\n                        \n                        \n                            incrementAction   (src/.../increment.action.ts)\n                        \n                        \n                            initialState   (src/.../reducer.ts)\n                        \n                        \n                            initialState   (src/.../counter.reducer.ts)\n                        \n                        \n                            initialState   (src/.../fakeapi.reducer.ts)\n                        \n                        \n                            isAnonymousInSelector   (src/.../selectors.ts)\n                        \n                        \n                            isLoggedInSelector   (src/.../selectors.ts)\n                        \n                        \n                            isSubmittingSelector   (src/.../selectors.ts)\n                        \n                        \n                            loginAction   (src/.../login.action.ts)\n                        \n                        \n                            loginFailureAction   (src/.../login.action.ts)\n                        \n                        \n                            loginSuccessAction   (src/.../login.action.ts)\n                        \n                        \n                            registerAction   (src/.../register.action.ts)\n                        \n                        \n                            registerFailureAction   (src/.../register.action.ts)\n                        \n                        \n                            registerSuccessAction   (src/.../register.action.ts)\n                        \n                        \n                            validationErrorsSelector   (src/.../selectors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/store/selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authFeatureSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  state: AppStateInterface,\n): AuthStateInterface => state.auth\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.currentUser,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAnonymousInSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.isLoggedIn === false,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedInSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.isLoggedIn,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmittingSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.isSubmitting,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrorsSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  authFeatureSelector,\n  (authState: AuthStateInterface) => authState.validationErrors,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/auth/store/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(\n    registerAction,\n    (state): AuthStateInterface => ({\n      ...state,\n      isSubmitting: true,\n      validationErrors: null,\n    }),\n  ),\n  on(\n    registerSuccessAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      isLoggedIn: true,\n      validationErrors: null,\n      currentUser: action.currentUser,\n    }),\n  ),\n  on(\n    registerFailureAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      validationErrors: action.errors,\n    }),\n  ),\n  on(\n    loginAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: true,\n    }),\n  ),\n  on(\n    loginSuccessAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      validationErrors: null,\n      isLoggedIn: true,\n      currentUser: action.currentUser,\n    }),\n  ),\n  on(\n    loginFailureAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isSubmitting: false,\n      validationErrors: action.errors,\n    }),\n  ),\n  on(\n    getUserAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isLoading: true,\n    }),\n  ),\n  on(\n    getUserSuccessAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isLoading: false,\n      isLoggedIn: true,\n      currentUser: action.currentUser,\n    }),\n  ),\n  on(\n    getUserFailureAction,\n    (state, action): AuthStateInterface => ({\n      ...state,\n      isLoading: false,\n      isLoggedIn: false,\n      currentUser: null,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthStateInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  isSubmitting: false,\n  currentUser: null,\n  isLoading: false,\n  isLoggedIn: null,\n  validationErrors: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/counter/store/reducers/counter.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(\n    incrementAction,\n    (state): CounterStateInterface => ({\n      ...state,\n      value: state.value + 1,\n    }),\n  ),\n  on(\n    decrementAction,\n    (state): CounterStateInterface => ({\n      ...state,\n      value: state.value - 1,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CounterStateInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  value: 0,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/fakeapi/store/selectors/fakeapi.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commentSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  fakeApiFeatureSelector,\n  (counterState: FakeApiStateInterface) => counterState.currentComment,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fakeApiFeatureSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  state: AppStateInterface,\n): FakeApiStateInterface => state.fakeApi\n                    \n                \n\n\n        \n    \n\n    src/app/counter/store/selectors/counter.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        counterFeatureSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  state: AppStateInterface,\n): CounterStateInterface => state.counter\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        counterValueSelector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  counterFeatureSelector,\n  (counterState: CounterStateInterface) => counterState.value,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/counter/store/actions/decrement.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decrementAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(CounterAction.DECREMENT)\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  xapiUrl: 'https://conduit.productionready.io/api',\n  apiUrl: 'https://api.realworld.io/api/',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  xapiUrl: 'https://conduit.productionready.io/api',\n  apiUrl: 'https://api.realworld.io/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/fakeapi/store/reducers/fakeapi.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fakeApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(\n    getCommentAction,\n    (state, action): FakeApiStateInterface => ({\n      ...state,\n      currentCommentId: getNumber(),\n    }),\n  ),\n  on(\n    getCommentSuccessAction,\n    (state, action): FakeApiStateInterface => ({\n      ...state,\n      currentComment: action.comment,\n    }),\n  ),\n  on(\n    getCommentFailureAction,\n    (state, action): FakeApiStateInterface => ({\n      ...state,\n      currentCommentId: 55,\n    }),\n  ),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FakeApiStateInterface\n\n                    \n                \n                \n                    \n                        Default value : {\n  currentCommentId: null,\n  currentComment: null,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/fakeapi/store/actions/getComment.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCommentAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  FakeApiActionEnum.GET_COMMENT,\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentFailureAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  FakeApiActionEnum.GET_COMMENT_FAILURE,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCommentSuccessAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  FakeApiActionEnum.GET_COMMENT_SUCCESS,\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/auth/store/actions/getUser.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUserAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(ActionTypes.GET_CURRENT_USER)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFailureAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  ActionTypes.GET_CURRENT_USER_FAILURE,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserSuccessAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  ActionTypes.GET_CURRENT_USER_SUCCESS,\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/counter/store/actions/increment.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        incrementAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(CounterAction.INCREMENT)\n                    \n                \n\n\n        \n    \n\n    src/app/auth/store/actions/login.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loginAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  ActionTypes.LOGIN,\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginFailureAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  ActionTypes.LOGIN_FAILURE,\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSuccessAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  ActionTypes.LOGIN_SUCCESS,\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/auth/store/actions/register.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        registerAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  ActionTypes.REGISTER,\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFailureAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  ActionTypes.REGISTER_FAILURE,\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerSuccessAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  ActionTypes.REGISTER_SUCCESS,\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
